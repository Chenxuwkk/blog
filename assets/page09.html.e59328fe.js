import{_ as e,r as c,o,c as l,b as n,e as p,w as t,d as s,a as i}from"./app.b33ca31f.js";const u={},k=n("h1",{id:"c\u8BED\u8A00\u7ED3\u6784\u4F53\u8BE6\u89E3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#c\u8BED\u8A00\u7ED3\u6784\u4F53\u8BE6\u89E3","aria-hidden":"true"},"#"),s(" C\u8BED\u8A00\u7ED3\u6784\u4F53\u8BE6\u89E3")],-1),r=n("hr",null,null,-1),d={class:"table-of-contents"},v=s("\u5B9A\u4E49\u65B9\u5F0F"),m=s("\u7ED3\u6784\u4F53\u53D8\u91CF\u7684\u521D\u59CB\u5316"),b=s("\u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53"),y=s("\u7ED3\u6784\u4F53\u6570\u7EC4"),g=s("\u7ED3\u6784\u4F53\u6307\u9488\u53D8\u91CF"),h=s("\u7ED3\u6784\u4F53\u7684\u6307\u9488\u6210\u5458"),f=s("\u7ED3\u6784\u4F53\u7684\u5BF9\u9F50\u89C4\u5219"),w=s("\u81EA\u52A8\u5BF9\u9F50\u89C4\u5219"),q=s("\u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53 \u81EA\u52A8\u5BF9\u9F50\u89C4\u5219"),_=s("\u5F3A\u5236\u5BF9\u9F50"),x=s("\u7ED3\u6784\u4F53\u7684\u4F4D\u57DF"),L=s("\u5171\u7528\u4F53union"),N=s("\u679A\u4E3Eenum"),U=i(`<p>\u5C06\u591A\u79CD\u6570\u636E\u7ED3\u6784\u5C01\u88C5\u5728\u4E00\u8D77 \u5F62\u6210\u65B0\u7684\u7ED3\u6784\u80F6\u7ED3\u6784\u4F53</p><p>\u6BCF\u79CD\u6570\u636E\u7ED3\u6784 \u90FD\u6709\u81EA\u5DF1\u72EC\u7ACB\u7684\u7A7A\u95F4\u3002</p><p>\u7ED3\u6784\u4F53\u7684\u5173\u952E\u5B57<code>struct</code>\u3002</p><h2 id="\u5B9A\u4E49\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u65B9\u5F0F" aria-hidden="true">#</a> \u5B9A\u4E49\u65B9\u5F0F</h2><p><strong>\uFF08\u63A8\u8350\uFF09\u6CD5\u4E00\uFF1A</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u5148\u5B9A\u4E49\u7ED3\u6784\u4F53\u7C7B\u578B\uFF0C\u518D\u5B9A\u4E49\u7ED3\u6784\u4F53\u53D8\u91CF</span>
<span class="token keyword">struct</span> <span class="token class-name">stu</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num<span class="token punctuation">;</span>
    <span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//\u5206\u53F7\u5F88\u91CD\u8981</span>
<span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CD5\u4E8C\uFF1A</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u5B9A\u4E49\u7ED3\u6784\u4F53\u7C7B\u578B\u540C\u65F6\uFF0C\u5B9A\u4E49\u7ED3\u6784\u4F53\u53D8\u91CF</span>
<span class="token keyword">struct</span> <span class="token class-name">stu</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num<span class="token punctuation">;</span>
    <span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>lucy<span class="token punctuation">;</span> <span class="token comment">//\u5206\u53F7\u5F88\u91CD\u8981</span>
<span class="token keyword">struct</span> <span class="token class-name">stu</span> bob
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CD5\u4E09\uFF1A</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u5B9A\u4E49\u4E00\u6B21\u6027\u7ED3\u6784\u4F53</span>
<span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num<span class="token punctuation">;</span>
    <span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>lucy<span class="token punctuation">;</span><span class="token comment">//\u5206\u53F7\u5F88\u91CD\u8981</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">stu</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u5B9A\u4E49\u7C7B\u578B\u662F \u4E0D\u8981\u7ED9\u6210\u5458\u8D4B\u503C</span>
    <span class="token comment">//int num = 10; //error</span>
    <span class="token keyword">int</span> num<span class="token punctuation">;</span> <span class="token comment">//\u7ED3\u6784\u4F53\u7684\u6210\u5458</span>
    <span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">//\u5FC5\u987B\u6709\u5206\u53F7</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy<span class="token punctuation">;</span>

    <span class="token comment">//\u8BBF\u95EE\u7ED3\u6784\u4F53\u6210\u5458  \u5FC5\u987B\u9075\u5FAA\u6210\u5458\u81EA\u8EAB\u7684\u7C7B\u578B</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>num<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7ED3\u6784\u4F53\u53D8\u91CF\u7684\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u53D8\u91CF\u7684\u521D\u59CB\u5316" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u53D8\u91CF\u7684\u521D\u59CB\u5316</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u7ED3\u6784\u4F53\u53D8\u91CF\u7684\u521D\u59CB\u5316  \u5FC5\u987B\u9075\u5FAA\u6210\u5458\u7684\u987A\u5E8F\u4EE5\u53CA\u81EA\u8EAB\u7684\u7C7B\u578B</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;lucy&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>num<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6E05\u7A7A\u7ED3\u6784\u4F53\u53D8\u91CF</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy<span class="token punctuation">;</span>
    <span class="token comment">//\u4F7F\u7528memset\u7ED9\u7ED3\u6784\u4F53\u53D8\u91CF\u6E05\u7A7A</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>lucy<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>lucy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165num name:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u952E\u76D8\u7ED9\u7ED3\u6784\u4F53\u53D8\u91CF\u4E2D\u6210\u5458\u8D4B\u503C</span>
    <span class="token comment">//&amp;lucy.num \u53D6\u7684\u662Flucy\u4E2Dnum\u6210\u5458\u7684\u5730\u5740</span>
    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>lucy<span class="token punctuation">.</span>num<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>num<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u53EF\u4EE5\u5355\u72EC\u64CD\u4F5C\u7ED3\u6784\u4F53\u4E2D\u7684\u6210\u5458</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;lucy&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    lucy<span class="token punctuation">.</span>num <span class="token operator">+=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5B57\u7B26\u4E32\u6570\u7EC4 \u5FC5\u987B\u4F7F\u7528\u5B57\u7B26\u4E32\u64CD\u4F5C\u51FD\u6570\u8FDB\u884C\u64CD\u4F5C</span>
    <span class="token function">strcpy</span><span class="token punctuation">(</span>lucy<span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token string">&quot;bob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> bob<span class="token punctuation">.</span>num<span class="token punctuation">,</span> bob<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u76F8\u540C\u7C7B\u578B\u7684\u7ED3\u6784\u4F53\u53D8\u91CF \u4E4B\u95F4\u8D4B\u503C\uFF08\u63A8\u83502\uFF09</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;lucy&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> bob<span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token number">0</span></span></span>
    <span class="token comment">//\u65B9\u5F0F\u4E00\uFF1A\u9010\u4E2A\u6210\u5458\u8D4B\u503C</span>
    bob<span class="token punctuation">.</span>num <span class="token operator">=</span> lucy<span class="token punctuation">.</span>num<span class="token punctuation">;</span>
    <span class="token function">strcpy</span><span class="token punctuation">(</span>bob<span class="token punctuation">.</span>name<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">elif</span> <span class="token expression"><span class="token number">0</span></span></span>
    <span class="token comment">//\u65B9\u5F0F\u4E8C\uFF1A\u76F8\u540C\u7C7B\u578B\u7684\u7ED3\u6784\u4F53\u53D8\u91CF \u53EF\u4EE5\u76F4\u63A5\u8D4B\u503C \uFF08\u63A8\u8350\uFF09</span>
    bob <span class="token operator">=</span> lucy<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>
    <span class="token comment">//\u65B9\u5F0F\u4E09\uFF1A\u76F8\u540C\u7C7B\u578B\u7684\u7ED3\u6784\u4F53\u53D8\u91CF \u5185\u5B58\u8D4B\u503C</span>
    <span class="token function">memcpy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>bob<span class="token punctuation">,</span> <span class="token operator">&amp;</span>lucy<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>lucy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> bob<span class="token punctuation">.</span>num<span class="token punctuation">,</span> bob<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">Date</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> year<span class="token punctuation">;</span>
    <span class="token keyword">int</span> month<span class="token punctuation">;</span>
    <span class="token keyword">int</span> day<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">student</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num<span class="token punctuation">;</span>
    <span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">Date</span> ob<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">student</span> lucy <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;lucy&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">//\u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53 \u8BBF\u95EE\u5230\u6700\u5E95\u5C42</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;num = %d, name=%s\\n&quot;</span><span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>num<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %d %d\\n&quot;</span><span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>ob<span class="token punctuation">.</span>year<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>ob<span class="token punctuation">.</span>month<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>ob<span class="token punctuation">.</span>day<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7ED3\u6784\u4F53\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u6570\u7EC4" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u6570\u7EC4</h2><p><strong>\u7ED3\u6784\u4F53\u6570\u7EC4\uFF1A\u672C\u8D28\u662F\u6570\u7EC4 \u6BCF\u4E2A\u5143\u7D20\u662F\u7ED3\u6784\u4F53</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">stu2</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num<span class="token punctuation">;</span> <span class="token comment">//\u7ED3\u6784\u4F53\u7684\u6210\u5458</span>
    <span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu2</span> edu<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;lucy&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">&quot;bob&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">102</span><span class="token punctuation">,</span> <span class="token string">&quot;tom&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">103</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5FB7\u739B\u897F\u4E9A&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">104</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5C0F\u70AE&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">//memset(edu, 0,sizeof(edu));//\u5C06\u6574\u4E2A\u7ED3\u6784\u4F53\u6570\u7EC4\u6E050</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>edu<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>edu<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> edu<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>num<span class="token punctuation">,</span> edu<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u952E\u76D8\u7ED9\u7ED3\u6784\u4F53\u8D4B\u503C</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu2</span> edu<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">memset</span><span class="token punctuation">(</span>edu<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>edu<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5C06\u6574\u4E2A\u7ED3\u6784\u4F53\u6570\u7EC4\u6E050</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>edu<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>edu<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165%d\u4E2A\u5B66\u751F\u4FE1\u606Fnum name\\n&quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u83B7\u53D6\u952E\u76D8\u8F93\u5165</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>edu<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>num<span class="token punctuation">,</span> edu<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> edu<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>num<span class="token punctuation">,</span> edu<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7ED3\u6784\u4F53\u6307\u9488\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u6307\u9488\u53D8\u91CF" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u6307\u9488\u53D8\u91CF</h2><p><strong>\u7ED3\u6784\u4F53\u6307\u9488\u53D8\u91CF \u672C\u8D28\u662F\u6307\u9488\u53D8\u91CF \u4FDD\u5B58\u7684\u662F\u7ED3\u6784\u4F53\u53D8\u91CF\u7684\u5730\u5740</strong></p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u5F53\u8BBF\u95EE\u7ED3\u6784\u4F53\u53D8\u91CF\u6210\u5458\u65F6\uFF0C\u5982\u679C\u901A\u8FC7\u7ED3\u6784\u4F53\u53D8\u91CF\u8BBF\u95EE\u7528<code>.</code></p><p>\u5982\u679C\u901A\u8FC7\u7ED3\u6784\u4F53\u53D8\u91CF\u6307\u9488\uFF08\u5730\u5740\uFF09\u8BBF\u95EE\u7528<code>-&gt;</code></p></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token keyword">struct</span> <span class="token class-name">stu</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num<span class="token punctuation">;</span> <span class="token comment">//\u7ED3\u6784\u4F53\u7684\u6210\u5458</span>
    <span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;lucy&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u6307\u9488\u53D8\u91CFp\u4FDD\u5B58lucy\u7684\u5730\u5740</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>lucy<span class="token punctuation">;</span>

    <span class="token comment">//*p == lucy</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>num<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span>num<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u901A\u8FC7 \u7ED3\u6784\u4F53\u6307\u9488\u53D8\u91CF \u76F4\u63A5\u8BBF\u95EE \u7ED3\u6784\u4F53\u7A7A\u95F4\u4E2D\u7684\u6210\u5458</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>num<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u4E0D\u7BA1.\u8FD8\u662F-&gt;  \u5C31\u770B\u7B26\u53F7 \u5DE6\u8FB9\u5982\u679C\u662F\u53D8\u91CF \u4F7F\u7528.  \u5982\u679C\u5DE6\u8FB9\u662F\u7ED3\u6784\u4F53\u5730\u5740 \u4F7F\u7528-&gt;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>lucy<span class="token punctuation">)</span><span class="token operator">-&gt;</span>num<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>lucy<span class="token punctuation">)</span><span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7ED3\u6784\u4F53\u6570\u7EC4\u5143\u7D20\u7684\u6307\u9488\u53D8\u91CF</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">input_stu_array</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">stu</span> <span class="token operator">*</span>arr<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165%d\u4E2A\u5B66\u5458\u7684\u4FE1\u606Fnum name\\n&quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u7B2C%d\u4E2A\u5B66\u751F\u7684\u4FE1\u606F:&quot;</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//scanf(&quot;%d %s&quot;, &amp;arr[i].num, arr[i].name);</span>
        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>arr <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token operator">-&gt;</span>num<span class="token punctuation">,</span> <span class="token punctuation">(</span>arr <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">sort_stu_array</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">stu</span> <span class="token operator">*</span>arr<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> min <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//if(strcmp(arr[min].name, arr[j].name) &gt; 0)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>min<span class="token punctuation">]</span><span class="token punctuation">.</span>num <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>num<span class="token punctuation">)</span>
                min <span class="token operator">=</span> j<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> min<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">struct</span> <span class="token class-name">stu</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>min<span class="token punctuation">]</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>min<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">print_stu_array</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">stu</span> <span class="token operator">*</span>arr<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// printf(&quot;%d %s\\n&quot;, arr[i].num, arr[i].name);</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>arr <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token operator">-&gt;</span>num<span class="token punctuation">,</span> <span class="token punctuation">(</span>arr <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> edu<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">memset</span><span class="token punctuation">(</span>edu<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>edu<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>edu<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>edu<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u5C01\u88C5\u51FD\u6570\u83B7\u53D6\u952E\u76D8\u8F93\u5165</span>
    <span class="token function">input_stu_array</span><span class="token punctuation">(</span>edu<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u5BF9\u7ED3\u6784\u4F53\u6570\u7EC4\u6392\u5E8F</span>
    <span class="token function">sort_stu_array</span><span class="token punctuation">(</span>edu<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u904D\u5386\u7ED3\u6784\u4F53\u6570\u7EC4\u7684\u5185\u5BB9</span>
    <span class="token function">print_stu_array</span><span class="token punctuation">(</span>edu<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7ED3\u6784\u4F53\u7684\u6307\u9488\u6210\u5458" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u7684\u6307\u9488\u6210\u5458" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u7684\u6307\u9488\u6210\u5458</h2><p><strong>\u6307\u9488\u6210\u5458\uFF1A\u6307\u9488\u53D8\u91CF \u4F5C\u4E3A\u7ED3\u6784\u4F53\u4E2D\u7684\u6210\u5458</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">stu</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num<span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span> <span class="token comment">//\u6307\u9488\u6210\u5458</span>
    <span class="token comment">//\u6B64\u5904\u56DE\u770B\u5B57\u4E32\u6307\u9488</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token keyword">struct</span> <span class="token class-name">stu</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num<span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span> <span class="token comment">//\u6307\u9488\u6210\u5458</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span>lucy<span class="token punctuation">.</span>num<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c\\n&quot;</span><span class="token punctuation">,</span>lucy<span class="token punctuation">.</span>name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    lucy<span class="token punctuation">.</span>name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">;</span><span class="token comment">//err \u6587\u5B57\u5E38\u91CF\u533A\u4E0D\u53EF\u4FEE\u6539</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7ED3\u6784\u4F53\u7684\u6307\u9488\u6210\u5458 \u6307\u5411\u5806\u533A</strong></p><p>\u5806\u533A\u56DE\u770B\u5185\u5B58\u51FD\u6570</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token keyword">struct</span> <span class="token class-name">stu</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num<span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span> <span class="token comment">//\u6307\u9488\u6210\u5458</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy<span class="token punctuation">;</span>
    lucy<span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token comment">//\u8BA9name\u6307\u5411\u5806\u533A</span>
    lucy<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">calloc</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u6B64\u5904\u9020\u6210\u5185\u5B58\u6CC4\u6F0F name\u5148\u6307\u5411\u5806\u533A \u7136\u540Ename\u53C8\u6307\u5411\u6587\u5B57\u5E38\u91CF\u533A \u4E22\u5931\u5806\u533A\u7A7A\u95F4\u5730</span>
\u5740
    <span class="token comment">//lucy.name = &quot;hello world&quot;;//err</span>
    <span class="token function">strcpy</span><span class="token punctuation">(</span>lucy<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>num<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c\\n&quot;</span><span class="token punctuation">,</span>lucy<span class="token punctuation">.</span>name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    lucy<span class="token punctuation">.</span>name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;E&#39;</span><span class="token punctuation">;</span><span class="token comment">//ok \u5806\u533A</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>num<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u91CA\u653Elucy.name\u6307\u5411\u7684\u5806\u533A\u7A7A\u95F4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lucy<span class="token punctuation">.</span>name <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">free</span><span class="token punctuation">(</span>lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lucy<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u76F8\u540C\u7C7B\u578B\u7684\u7ED3\u6784\u4F53\u53D8\u91CF\u53EF\u4EE5\u6574\u4F53\u8D4B\u503C</strong></p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u5982\u679C\u7ED3\u6784\u4F53\u4E2D\u6CA1\u6709\u6307\u9488\u6210\u5458 \u8D4B\u503C \u4E0D\u4F1A\u51FA\u73B0\u6D45\u62F7\u8D1D</p><p>\u5982\u679C\u7ED3\u6784\u4F53\u4E2D\u6709\u6307\u9488\u6210\u5458 \u8D4B\u503C \u5BB9\u6613\u9020\u6210\u6D45\u62F7\u8D1D</p></div><p><img src="https://img30.360buyimg.com/pop/jfs/t1/120023/8/21521/50920/6221b2b1Eb304defd/6a00f52fa2b840ad.png" alt="2022-03-04-14-32-27.png"></p><p><strong>\u6D45\u62F7\u8D1D\u51FA\u73B0\u7684\u95EE\u9898\uFF1A</strong></p><p>\u76F8\u540C\u7C7B\u578B\u7684\u7ED3\u6784\u4F53\u53D8\u91CF\u8D4B\u503C\uFF0C\u5BFC\u81F4\u5404\u4E2A\u7ED3\u6784\u4F53\u53D8\u91CF\u7684\u6307\u9488\u6210\u5458\u6307\u5411\u540C\u4E00\u5904\u5806\u533A\u7A7A\u95F4\uFF0C\u800C\u5404\u4E2A\u7ED3\u6784\u4F53\u72EC\u7ACB\u91CA\u653E\u6307\u9488\u6210\u5458\u6307\u5411\u7684\u7A7A\u95F4\u3002\u9020\u6210\u540C\u4E00\u5904\u5806\u533A\u7A7A\u95F4\u88AB\u91CA\u653E\u591A\u6B21</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token keyword">struct</span> <span class="token class-name">stu</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num<span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span> <span class="token comment">//\u6307\u9488\u6210\u5458</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy<span class="token punctuation">;</span>
    lucy<span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token comment">//\u8BA9name\u6307\u5411\u5806\u533A</span>
    lucy<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">calloc</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">strcpy</span><span class="token punctuation">(</span>lucy<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>num<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">struct</span> <span class="token class-name">stu</span> bob<span class="token punctuation">;</span>
    bob <span class="token operator">=</span> lucy<span class="token punctuation">;</span><span class="token comment">//\u6D45\u62F7\u8D1D</span>

    <span class="token comment">//\u91CA\u653Elucy.name\u6307\u5411\u7684\u5806\u533A\u7A7A\u95F4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lucy<span class="token punctuation">.</span>name <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">free</span><span class="token punctuation">(</span>lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lucy<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>bob<span class="token punctuation">.</span>name <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">free</span><span class="token punctuation">(</span>bob<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bob<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token comment">//\u591A\u6B21\u91CA\u653E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5982\u679C\u7ED3\u6784\u4F53\u4E2D\u6709\u6307\u9488\u6210\u5458 \u5C3D\u91CF\u4F7F\u7528\u6DF1\u62F7\u8D1D\u3002</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">stu</span> bob<span class="token punctuation">;</span>
bob<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">calloc</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u6DF1\u62F7\u8D1D</span>
bob<span class="token punctuation">.</span>num <span class="token operator">=</span> lucy<span class="token punctuation">.</span>num<span class="token punctuation">;</span>
<span class="token function">strcpy</span><span class="token punctuation">(</span>bob<span class="token punctuation">.</span>name<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token keyword">struct</span> <span class="token class-name">stu</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num<span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span> <span class="token comment">//\u6307\u9488\u6210\u5458</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy<span class="token punctuation">;</span>
    lucy<span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token comment">//\u8BA9name\u6307\u5411\u5806\u533A</span>
    lucy<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">calloc</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">strcpy</span><span class="token punctuation">(</span>lucy<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>num<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">struct</span> <span class="token class-name">stu</span> bob<span class="token punctuation">;</span>
    bob<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">calloc</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bob<span class="token punctuation">.</span>num <span class="token operator">=</span> lucy<span class="token punctuation">.</span>num<span class="token punctuation">;</span>
    <span class="token function">strcpy</span><span class="token punctuation">(</span>bob<span class="token punctuation">.</span>name<span class="token punctuation">,</span> lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> bob<span class="token punctuation">.</span>num<span class="token punctuation">,</span> bob<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u91CA\u653Elucy.name\u6307\u5411\u7684\u5806\u533A\u7A7A\u95F4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lucy<span class="token punctuation">.</span>name <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">free</span><span class="token punctuation">(</span>lucy<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lucy<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>bob<span class="token punctuation">.</span>name <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">free</span><span class="token punctuation">(</span>bob<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bob<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7ED3\u6784\u4F53\u5728\u5806\u533A \u7ED3\u6784\u4F53\u7684\u6307\u9488\u6210\u5458\u6307\u5411\u5806\u533A</strong></p><p>\u6309\u7167\u987A\u5E8F\uFF0C\u4ECE\u91CC\u5411\u5916\u91CA\u653E</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u7ED3\u6784\u4F53\u672C\u8EAB\u5728\u5806\u533A</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">stu</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">calloc</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">stu</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u4E3A\u7ED3\u6784\u4F53\u4E2D\u7684\u6307\u9488\u6210\u5458 \u7533\u8BF7\u5806\u533A\u7A7A\u95F4</span>
    p<span class="token operator">-&gt;</span>name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">calloc</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u7ED9\u7ED3\u6784\u4F53\u4E2D\u7684\u6210\u5458\u8D4B\u503C</span>
    p<span class="token operator">-&gt;</span>num <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token function">strcpy</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>name<span class="token punctuation">,</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>num<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u5148\u91CA\u653E\u6210\u5458\u7A7A\u95F4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>name <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">free</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        p<span class="token operator">-&gt;</span>name <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u5728\u91CA\u653E\u7ED3\u6784\u4F53\u7684\u7A7A\u95F4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">free</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        p <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7ED3\u6784\u4F53\u6307\u9488\u6570\u7EC4\u5728\u5806\u533A\u3001\u7ED3\u6784\u4F53\u5728\u5806\u533A\u3001\u7ED3\u6784\u6307\u9488\u6210\u5458\u5728\u5806\u533A</strong></p><p>\u6309\u7167\u987A\u5E8F\uFF0C\u4ECE\u91CC\u5411\u5916\u91CA\u653E</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u7ED9\u7ED3\u6784\u4F53\u6307\u9488\u6570\u7EC4\u7533\u8BF7\u5806\u533A\u7A7A\u95F4</span>
    <span class="token keyword">struct</span> <span class="token class-name">stu</span> <span class="token operator">*</span><span class="token operator">*</span>arr <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token comment">//*(stu\u6307\u9488)[]</span>
    arr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">stu</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">calloc</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">stu</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u7ED9\u6307\u9488\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20 \u7533\u8BF7\u7ED3\u6784\u4F53\u5806\u533A\u7A7A\u95F4</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">stu</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">calloc</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">stu</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u6BCF\u4E2A\u7ED3\u6784\u4F53\u4E2D\u7684name\u6210\u5458\u7533\u8BF7\u5806\u533A\u7A7A\u95F4</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">calloc</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u8D4B\u503C</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>num <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">+</span> i<span class="token punctuation">;</span>
        <span class="token function">sprintf</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>name<span class="token punctuation">,</span> <span class="token string">&quot;\u59D3\u540D%d&quot;</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u904D\u5386</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %s\\n&quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>num<span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u91CA\u653Earr\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20 \u4EE5\u53CA\u6BCF\u4E2A\u5143\u7D20\u4E2D\u7684name</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//\u5148\u91CA\u653E\u7ED3\u6784\u4F53\u4E2D\u7684name\u7684\u6307\u5411</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>name <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">free</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>name <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//\u91CA\u653E\u7ED3\u6784\u4F53</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">free</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u91CA\u653E\u6574\u4E2Aarr\u6307\u9488\u6570\u7EC4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">free</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        arr <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7ED3\u6784\u4F53\u7684\u5BF9\u9F50\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u7684\u5BF9\u9F50\u89C4\u5219" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u7684\u5BF9\u9F50\u89C4\u5219</h2><h3 id="\u81EA\u52A8\u5BF9\u9F50\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u81EA\u52A8\u5BF9\u9F50\u89C4\u5219" aria-hidden="true">#</a> \u81EA\u52A8\u5BF9\u9F50\u89C4\u5219</h3><p><img src="https://img30.360buyimg.com/pop/jfs/t1/102559/19/24208/47017/6225b29fE8a0c7459/fb24f14bf2039758.png" alt="2022-03-07-14-55-04.png"></p><ol><li>\u786E\u5B9A\u5206\u914D\u5355\u4F4D\uFF08\u4E00\u884C\u5206\u914D\u591A\u5C11\u5B57\u8282\uFF09 <ul><li>\u7ED3\u6784\u4F53\u4E2D\u6700\u5927\u7684\u57FA\u672C\u7C7B\u578B \u957F\u5EA6\u51B3\u5B9A\u3002</li></ul></li><li>\u786E\u5B9A\u6210\u5458\u7684\u504F\u79FB\u91CF <ul><li>\u6210\u5458\u504F\u79FB\u91CF = \u6210\u5458\u81EA\u8EAB\u7C7B\u578B\u7684\u6574\u6570\u500D\u3002</li></ul></li><li>\u6536\u5C3E\u5DE5\u4F5C <ul><li>\u7ED3\u6784\u4F53\u7684\u603B\u5927\u5C0F = \u5206\u914D\u5355\u4F4D\u6574\u6570\u500D</li></ul></li></ol><h4 id="\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B" aria-hidden="true">#</a> \u6848\u4F8B</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">Data</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> a<span class="token punctuation">;</span>
    <span class="token keyword">short</span> b<span class="token punctuation">;</span>
    <span class="token keyword">int</span> c<span class="token punctuation">;</span>
    <span class="token keyword">char</span> d<span class="token punctuation">;</span>
    <span class="token keyword">short</span> e<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://img30.360buyimg.com/pop/jfs/t1/112532/3/23160/9171/6225b2b4E0343138c/ec824fe9a5b6d8e0.png" alt="2022-03-07-14-57-16.png"></p><h3 id="\u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53-\u81EA\u52A8\u5BF9\u9F50\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53-\u81EA\u52A8\u5BF9\u9F50\u89C4\u5219" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53 \u81EA\u52A8\u5BF9\u9F50\u89C4\u5219</h3><ol><li>\u786E\u5B9A\u5206\u914D\u5355\u4F4D\uFF08\u4E00\u884C\u5206\u914D\u591A\u5C11\u5B57\u8282\uFF09 <ul><li>\u6240\u6709\u7ED3\u6784\u4F53\u4E2D\u6700\u5927\u7684\u57FA\u672C\u7C7B\u578B \u957F\u5EA6\u51B3\u5B9A\u3002</li></ul></li><li>\u786E\u5B9A\u6210\u5458\u7684\u504F\u79FB\u91CF <ul><li>\u666E\u901A\u6210\u5458\u504F\u79FB\u91CF = \u6210\u5458\u81EA\u8EAB\u7C7B\u578B\u7684\u6574\u6570\u500D\u3002</li><li>\u88AB\u5D4C\u5957\u7684\u7ED3\u6784\u4F53\u6574\u4F53\u504F\u79FB\u91CF = \u8BE5\u7ED3\u6784\u4F53\u4E2D\u6700\u5927\u7684\u57FA\u672C\u7C7B\u578B\u6574\u6570\u500D</li></ul></li><li>\u6536\u5C3E\u5DE5\u4F5C <ul><li>\u7ED3\u6784\u4F53\u6210\u5458\u5927\u5C0F = \u8BE5\u7ED3\u6784\u4F53\u4E2D\u6700\u5927\u7684\u57FA\u672C\u7C7B\u578B\u6574\u6570\u500D</li><li>\u7ED3\u6784\u4F53\u7684\u603B\u5927\u5C0F = \u5206\u914D\u5355\u4F4D\u6574\u6570\u500D</li></ul></li></ol><h4 id="\u6848\u4F8B-1" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B-1" aria-hidden="true">#</a> \u6848\u4F8B</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">A</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> a1<span class="token punctuation">;</span>
    <span class="token keyword">int</span> b1<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">B</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> a<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">A</span> b<span class="token punctuation">;</span>
    <span class="token keyword">short</span> c<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://img30.360buyimg.com/pop/jfs/t1/114477/24/21168/10646/6225b2c3E0ef6be43/69023758cb642980.png" alt="2022-03-07-15-00-17.png"></p><h4 id="\u6848\u4F8B-2" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B-2" aria-hidden="true">#</a> \u6848\u4F8B</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">A</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> a1<span class="token punctuation">;</span>
    <span class="token keyword">short</span> b1<span class="token punctuation">;</span>
    <span class="token keyword">short</span> c2<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">B</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> a<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">A</span> b<span class="token punctuation">;</span>
    <span class="token keyword">short</span> c<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://img30.360buyimg.com/pop/jfs/t1/216124/11/13853/8687/6225b2cfE586c84b9/28e29d1afb321852.png" alt="2022-03-07-15-01-21.png"></p><h3 id="\u5F3A\u5236\u5BF9\u9F50" tabindex="-1"><a class="header-anchor" href="#\u5F3A\u5236\u5BF9\u9F50" aria-hidden="true">#</a> \u5F3A\u5236\u5BF9\u9F50</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression"><span class="token function">pack</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span></span></span>
<span class="token comment">//value \u4E3A1 2 4 8 16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u786E\u5B9A\u5206\u914D\u5355\u4F4D\uFF08\u4E00\u884C\u5206\u914D\u591A\u5C11\u5B57\u8282\uFF09 <ul><li>\u5206\u914D\u5355\u4F4D = min(\u7ED3\u6784\u4F53\u4E2D\u6700\u5927\u7684\u57FA\u672C\u7C7B\u578B, value)</li></ul></li><li>\u786E\u5B9A\u6210\u5458\u7684\u504F\u79FB\u91CF <ul><li>\u6210\u5458\u504F\u79FB\u91CF = \u6210\u5458\u81EA\u8EAB\u7C7B\u578B\u7684\u6574\u6570\u500D\u3002</li></ul></li><li>\u6536\u5C3E\u5DE5\u4F5C <ul><li>\u7ED3\u6784\u4F53\u7684\u603B\u5927\u5C0F = \u5206\u914D\u5355\u4F4D\u6574\u6570\u500D</li></ul></li></ol><h4 id="\u6848\u4F8B-3" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B-3" aria-hidden="true">#</a> \u6848\u4F8B</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression"><span class="token function">pack</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span></span></span>
<span class="token keyword">struct</span> <span class="token class-name">A</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> a<span class="token punctuation">;</span>
    <span class="token keyword">int</span> b<span class="token punctuation">;</span>
    <span class="token keyword">short</span> c<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://img30.360buyimg.com/pop/jfs/t1/146315/6/23974/5938/6225b2daE6768b0ce/bf86026afa48fd7f.png" alt="2022-03-07-15-05-24.png"></p><h2 id="\u7ED3\u6784\u4F53\u7684\u4F4D\u57DF" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u7684\u4F4D\u57DF" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u7684\u4F4D\u57DF</h2><p>\u5728\u7ED3\u6784\u4F53\u4E2D\uFF0C\u4EE5\u4F4D\u4E3A\u5355\u4F4D\u7684\u6210\u5458\uFF0C\u79F0\u4E4B\u4E3A\u4F4D\u6BB5(\u4F4D\u57DF)</p><p>\u4E00\u822C\u6765\u8BF4\u53EA\u6709 <code>unsigned int</code> \u7C7B\u578B\u624D\u6709\u4F4D\u57DF\uFF0C\u4F46 <code>unsigned char</code>\u3000\u4E5F\u53EF\u4EE5</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">packed_data</span>
<span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> a<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> b<span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> c<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> c<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> d<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span>
<span class="token punctuation">}</span>data<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://img30.360buyimg.com/pop/jfs/t1/144779/23/24989/9283/6225b2e9E5f0847c6/57282ff81106cb9d.png" alt="2022-03-07-15-07-26.png"></p><p><code>a</code>\u7684\u7C7B\u578B\u662F<code>unsigned int</code>,<code>a</code>\u7684\u5927\u5C0F\u53EA\u5360<code>2</code>\u4F4D\u4E8C\u8FDB\u5236\u4F4D\u3002</p><p>\u6CA1\u6709\u975E\u4F4D\u57DF\u9694\u5F00\u7684\u4F4D\u57DF \u53EB\u76F8\u90BB\u4F4D\u57DF\u3002</p><p>\u76F8\u90BB\u4F4D\u57DF\u53EF\u4EE5\u538B\u7F29,\u4F46\u662F\u538B\u7F29\u7684\u4F4D\u6570\u4E0D\u80FD\u8D85\u8FC7\u81EA\u8EAB\u7C7B\u578B\u7684\u5927\u5C0F\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u4E0D\u8981\u5BF9\u4F4D\u57DF\u53D6\u5730\u5740\u3002</p></div><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u5BF9\u4F4D\u57DF\u8D4B\u503C \u4E0D\u8981\u8D85\u8FC7 \u4F4D\u57DF\u672C\u8EAB\u4F4D\u7684\u5BBD\u5EA6</p></div><p><strong>\u53E6\u8D77\u4E00\u4E2A\u5B58\u50A8\u5355\u5143</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">A</span>
<span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> a<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//\u53E6\u8D77\u4E00\u4E2A\u5B58\u50A8\u5355\u5143</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> b<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u65E0\u610F\u4E49\u4F4D\u6BB5</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">A</span>
<span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> a<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//2\u4F4D\u65E0\u610F\u4E49\u4F4D\u6BB5</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> b<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5171\u7528\u4F53union" tabindex="-1"><a class="header-anchor" href="#\u5171\u7528\u4F53union" aria-hidden="true">#</a> \u5171\u7528\u4F53union</h2><p>\u7ED3\u6784\u4F53\uFF1A\u6240\u6709\u6210\u5458\u62E5\u6709\u72EC\u7ACB\u7A7A\u95F4</p><p>\u5171\u7528\u4F53\uFF1A\u6240\u6709\u6210\u5458\u5171\u4EAB\u540C\u4E00\u5757\u7A7A\u95F4</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">union</span> Data
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> a<span class="token punctuation">;</span>
    <span class="token keyword">short</span> b<span class="token punctuation">;</span>
    <span class="token keyword">int</span> c<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6210\u5458<code>a</code> <code>b</code> <code>c</code>\u5171\u4EAB\u540C\u4E00\u5757\u7A7A\u95F4,\u7A7A\u95F4\u5927\u5C0F \u7531\u6700\u5927\u7684\u6210\u5458\u7A7A\u95F4\u51B3\u5B9A</p><p><img src="https://img30.360buyimg.com/pop/jfs/t1/163142/28/26750/7447/6225b2f8Ebfab639c/f921e9fc74552660.png" alt="2022-03-07-15-13-51.png"></p><p>\u6210\u5458<code>a</code> <code>b</code> <code>c</code>\u5171\u4EAB\u540C\u4E00\u5757\u7A7A\u95F4\uFF0C\u4F46\u662F\u6BCF\u4E2A\u6210\u5458 \u80FD\u64CD\u4F5C\u7684\u7A7A\u95F4\u7684\u8303\u56F4 \u662F\u7531\u6210\u5458\u81EA\u8EAB\u7C7B\u578B\u957F\u5EA6\u51B3\u5B9A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">union</span> Data
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> a<span class="token punctuation">;</span>
    <span class="token keyword">short</span> b<span class="token punctuation">;</span>
    <span class="token keyword">int</span> c<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://img30.360buyimg.com/pop/jfs/t1/110825/12/23081/12577/6225b304Eeb259618/43448259cb3a4537.png" alt="2022-03-07-15-14-53.png"></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">union</span> Data ob<span class="token punctuation">;</span>
    ob<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">0x01020304</span><span class="token punctuation">;</span>
    ob<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">0x0102</span><span class="token punctuation">;</span>
    ob<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">;</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;%#x\\n&quot;</span><span class="token punctuation">,</span> ob<span class="token punctuation">.</span>a <span class="token operator">+</span> ob<span class="token punctuation">.</span>b <span class="token operator">+</span> ob<span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://img30.360buyimg.com/pop/jfs/t1/106319/32/25177/21746/6225b315E11d2d90f/674c659a3f84fc5a.png" alt="2022-03-07-15-15-21.png"></p><h2 id="\u679A\u4E3Eenum" tabindex="-1"><a class="header-anchor" href="#\u679A\u4E3Eenum" aria-hidden="true">#</a> \u679A\u4E3Eenum</h2><p>\u679A\u4E3E:\u5C06\u679A\u4E3E\u53D8\u91CF \u8981\u8D4B\u7684\u503C \u4E00\u4E00\u5217\u4E3E\u51FA\u6765</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">enum</span> <span class="token class-name">POKER_COLOR</span><span class="token punctuation">{</span>HONGTAO<span class="token punctuation">,</span>MEIHUA<span class="token punctuation">,</span>FANGKUAI<span class="token punctuation">,</span>HEITAO<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">enum</span> <span class="token class-name">POKER_COLOR</span><span class="token punctuation">{</span>HONGTAO<span class="token punctuation">,</span>MEIHUA<span class="token punctuation">,</span>FANGKUAI<span class="token punctuation">,</span>HEITAO<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">enum</span> <span class="token class-name">POKER_COLOR</span> p_c <span class="token operator">=</span> MEIHUA<span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %d %d %d\\n&quot;</span><span class="token punctuation">,</span>HONGTAO<span class="token punctuation">,</span>MEIHUA<span class="token punctuation">,</span>FANGKUAI<span class="token punctuation">,</span>HEITAO<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0 1 2 3</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,104);function A(E,O){const a=c("RouterLink");return o(),l("div",null,[k,r,n("nav",d,[n("ul",null,[n("li",null,[p(a,{to:"#\u5B9A\u4E49\u65B9\u5F0F"},{default:t(()=>[v]),_:1})]),n("li",null,[p(a,{to:"#\u7ED3\u6784\u4F53\u53D8\u91CF\u7684\u521D\u59CB\u5316"},{default:t(()=>[m]),_:1})]),n("li",null,[p(a,{to:"#\u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53"},{default:t(()=>[b]),_:1})]),n("li",null,[p(a,{to:"#\u7ED3\u6784\u4F53\u6570\u7EC4"},{default:t(()=>[y]),_:1})]),n("li",null,[p(a,{to:"#\u7ED3\u6784\u4F53\u6307\u9488\u53D8\u91CF"},{default:t(()=>[g]),_:1})]),n("li",null,[p(a,{to:"#\u7ED3\u6784\u4F53\u7684\u6307\u9488\u6210\u5458"},{default:t(()=>[h]),_:1})]),n("li",null,[p(a,{to:"#\u7ED3\u6784\u4F53\u7684\u5BF9\u9F50\u89C4\u5219"},{default:t(()=>[f]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#\u81EA\u52A8\u5BF9\u9F50\u89C4\u5219"},{default:t(()=>[w]),_:1})]),n("li",null,[p(a,{to:"#\u7ED3\u6784\u4F53\u5D4C\u5957\u7ED3\u6784\u4F53-\u81EA\u52A8\u5BF9\u9F50\u89C4\u5219"},{default:t(()=>[q]),_:1})]),n("li",null,[p(a,{to:"#\u5F3A\u5236\u5BF9\u9F50"},{default:t(()=>[_]),_:1})])])]),n("li",null,[p(a,{to:"#\u7ED3\u6784\u4F53\u7684\u4F4D\u57DF"},{default:t(()=>[x]),_:1})]),n("li",null,[p(a,{to:"#\u5171\u7528\u4F53union"},{default:t(()=>[L]),_:1})]),n("li",null,[p(a,{to:"#\u679A\u4E3Eenum"},{default:t(()=>[N]),_:1})])])]),U])}var z=e(u,[["render",A],["__file","page09.html.vue"]]);export{z as default};
