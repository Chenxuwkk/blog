import{_ as e,r as o,o as c,c as i,b as n,e as p,w as t,d as s,a as l}from"./app.b33ca31f.js";const u={},r=n("h1",{id:"c\u8BED\u8A00\u6307\u9488",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#c\u8BED\u8A00\u6307\u9488","aria-hidden":"true"},"#"),s(" C\u8BED\u8A00\u6307\u9488")],-1),k=n("hr",null,null,-1),d={class:"table-of-contents"},m=s("\u5B9A\u4E49\u6B65\u9AA4"),v=s("\u6307\u9488\u53D8\u91CF\u8BE6\u89E3"),b=s("\u6307\u9488\u521D\u59CB\u5316"),h=s("\u6307\u9488\u53D8\u91CF\u7684\u7C7B\u578B"),g=s("\u6307\u5411\u7C7B\u578B \u51B3\u5B9A\u4E86\u53D6\u503C\u5BBD\u5EA6"),y=s("\u6307\u5411\u7C7B\u578B \u51B3\u5B9A\u4E86+1\u8DE8\u5EA6"),f=s("*p\u7B49\u4EF7num"),w=s("\u6307\u9488\u53D8\u91CF\u7684\u6CE8\u610F\u9879"),_=s("\u6570\u7EC4\u5143\u7D20\u7684\u6307\u9488\u53D8\u91CF"),x=s("\u6307\u5411\u540C\u4E00\u6570\u7EC4\u5143\u7D20\u7684\u4E24\u4E2A\u6307\u9488\u53D8\u91CF\u95F4\u7684\u5173\u7CFB"),q=s("\u6307\u9488\u9AD8\u7EA7"),z=s("\u5B57\u7B26\u4E32\u4E0E\u6307\u9488"),L=s("\u6307\u9488\u6570\u7EC4"),N=s("\u6307\u9488\u7684\u6307\u9488"),U=s("\u6570\u7EC4\u6307\u9488"),j=s("\u4E8C\u7EF4\u6570\u7EC4\u548C\u6570\u7EC4\u6307\u9488\u7684\u5173\u7CFB"),B=s("\u591A\u7EF4\u6570\u7EC4\u7684\u7269\u7406\u5B58\u50A8"),E=s("\u6307\u9488\u53D8\u91CF\u4F5C\u4E3A\u51FD\u6570\u7684\u53C2\u6570"),C=s("\u6570\u7EC4\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570"),V=s("\u4E8C\u7EF4\u6570\u7EC4\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570"),T=s("\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B \u4E3A\u6307\u9488\u7C7B\u578B"),F=s("\u51FD\u6570\u6307\u9488"),P=s("\u51FD\u6570\u6307\u9488 \u4F5C\u4E3A\u51FD\u6570\u7684\u53C2\u6570"),R=l(`<h2 id="\u5B9A\u4E49\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u6B65\u9AA4" aria-hidden="true">#</a> \u5B9A\u4E49\u6B65\u9AA4</h2><ol><li><p><code>*</code>\u4FEE\u9970\u6307\u9488\u53D8\u91CF<code>p</code></p></li><li><p>\u4FDD\u5B58\u8C01\u7684\u5730\u5740 \u4F60\u5148\u5B9A\u4E49\u8C01</p></li><li><p>\u4ECE\u4E0A\u5F80\u4E0B\u6574\u4F53\u66FF\u6362</p></li></ol><h4 id="\u6848\u4F8B1" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B1" aria-hidden="true">#</a> \u6848\u4F8B1</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u6307\u9488\u53D8\u91CFp \u4FDD\u5B58 int num\u7684\u5730\u5740\uFF1B </span>
<span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
<span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u6307\u9488\u53D8\u91CFp \u4FDD\u5B58\u6570\u7EC4int arr[5]\u9996\u5730\u5740\uFF1B </span>
<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u6307\u9488\u53D8\u91CFp \u4FDD\u5B58\u51FD\u6570\u7684\u5165\u53E3\u5730\u5740 </span>
<span class="token keyword">int</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u6307\u9488\u53D8\u91CFp \u4FDD\u5B58\u7ED3\u6784\u4F53\u53D8\u91CF\u7684\u5730\u5740 </span>
<span class="token keyword">struct</span> <span class="token class-name">stu</span> lucy<span class="token punctuation">;</span> 
<span class="token keyword">struct</span> <span class="token class-name">stu</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
<span class="token comment">//\u5B9A\u4E49\u4E00\u4E2A\u6307\u9488\u53D8\u91CFp \u4FDD\u5B58\u6307\u9488\u53D8\u91CFint *p\u7684\u5730\u5740 </span>
<span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>p<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6307\u9488\u53D8\u91CF\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u53D8\u91CF\u8BE6\u89E3" aria-hidden="true">#</a> \u6307\u9488\u53D8\u91CF\u8BE6\u89E3</h2><h4 id="_1-\u572832\u4F4D\u5E73\u53F0\u4EFB\u4F55\u7C7B\u578B\u7684\u6307\u9488\u53D8\u91CF-\u90FD\u662F4\u5B57\u8282" tabindex="-1"><a class="header-anchor" href="#_1-\u572832\u4F4D\u5E73\u53F0\u4EFB\u4F55\u7C7B\u578B\u7684\u6307\u9488\u53D8\u91CF-\u90FD\u662F4\u5B57\u8282" aria-hidden="true">#</a> 1. \u572832\u4F4D\u5E73\u53F0\u4EFB\u4F55\u7C7B\u578B\u7684\u6307\u9488\u53D8\u91CF \u90FD\u662F4\u5B57\u8282</h4><h4 id="_2-\u572864\u4F4D\u5E73\u53F0\u4EFB\u4F55\u7C7B\u578B\u7684\u6307\u9488\u53D8\u91CF-\u90FD\u662F8\u5B57\u8282" tabindex="-1"><a class="header-anchor" href="#_2-\u572864\u4F4D\u5E73\u53F0\u4EFB\u4F55\u7C7B\u578B\u7684\u6307\u9488\u53D8\u91CF-\u90FD\u662F8\u5B57\u8282" aria-hidden="true">#</a> 2. \u572864\u4F4D\u5E73\u53F0\u4EFB\u4F55\u7C7B\u578B\u7684\u6307\u9488\u53D8\u91CF \u90FD\u662F8\u5B57\u8282</h4><p><img src="https://img30.360buyimg.com/pop/jfs/t1/103326/11/22246/22632/620a383aE286e7425/fb6d9a3eb45a25b8.png" alt="2022-02-14-19-06-06.png"></p><h3 id="\u6307\u9488\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u521D\u59CB\u5316" aria-hidden="true">#</a> \u6307\u9488\u521D\u59CB\u5316</h3><p>\u6307\u9488\u53D8\u91CF \u5728\u64CD\u4F5C\u4E4B\u524D \u5FC5\u987B\u6307\u5411\u5408\u6CD5\u7684\u5730\u5740\u7A7A\u95F4</p><h4 id="_1-\u6307\u9488\u53D8\u91CF-\u5982\u679C\u4E0D\u521D\u59CB\u5316-\u7ACB\u5373\u64CD\u4F5C-\u4F1A\u51FA\u73B0\u6BB5\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#_1-\u6307\u9488\u53D8\u91CF-\u5982\u679C\u4E0D\u521D\u59CB\u5316-\u7ACB\u5373\u64CD\u4F5C-\u4F1A\u51FA\u73B0\u6BB5\u9519\u8BEF" aria-hidden="true">#</a> 1. \u6307\u9488\u53D8\u91CF \u5982\u679C\u4E0D\u521D\u59CB\u5316 \u7ACB\u5373\u64CD\u4F5C \u4F1A\u51FA\u73B0\u6BB5\u9519\u8BEF</h4><h4 id="_2-\u6307\u9488\u53D8\u91CF-\u5982\u679C\u6CA1\u6709\u6307\u5411\u5408\u6CD5\u7684\u7A7A\u95F4-\u5EFA\u8BAE\u521D\u59CB\u5316\u4E3Anull" tabindex="-1"><a class="header-anchor" href="#_2-\u6307\u9488\u53D8\u91CF-\u5982\u679C\u6CA1\u6709\u6307\u5411\u5408\u6CD5\u7684\u7A7A\u95F4-\u5EFA\u8BAE\u521D\u59CB\u5316\u4E3Anull" aria-hidden="true">#</a> 2. \u6307\u9488\u53D8\u91CF \u5982\u679C\u6CA1\u6709\u6307\u5411\u5408\u6CD5\u7684\u7A7A\u95F4 \u5EFA\u8BAE\u521D\u59CB\u5316\u4E3A<code>NULL</code></h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token comment">//NULL\u662F\u8D4B\u503C\u7ED9p int *p; p = NULL;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u4E0D\u8981\u64CD\u4F5C \u6307\u5411<code>NULL</code>\u7684\u6307\u9488\u53D8\u91CF</p></div><h4 id="_3-\u5C06\u6307\u9488\u53D8\u91CF-\u521D\u59CB\u5316\u4E3A-\u5408\u6CD5\u7684\u5730\u5740-\u53D8\u91CF\u7684\u5730\u5740\u3001\u52A8\u6001\u7533\u8BF7\u7684\u5730\u5740\u3001\u51FD\u6570\u5165\u53E3\u5730\u5730\u5740" tabindex="-1"><a class="header-anchor" href="#_3-\u5C06\u6307\u9488\u53D8\u91CF-\u521D\u59CB\u5316\u4E3A-\u5408\u6CD5\u7684\u5730\u5740-\u53D8\u91CF\u7684\u5730\u5740\u3001\u52A8\u6001\u7533\u8BF7\u7684\u5730\u5740\u3001\u51FD\u6570\u5165\u53E3\u5730\u5730\u5740" aria-hidden="true">#</a> 3. \u5C06\u6307\u9488\u53D8\u91CF \u521D\u59CB\u5316\u4E3A \u5408\u6CD5\u7684\u5730\u5740\uFF08\u53D8\u91CF\u7684\u5730\u5740\u3001\u52A8\u6001\u7533\u8BF7\u7684\u5730\u5740\u3001\u51FD\u6570\u5165\u53E3\u5730\u5730\u5740\uFF09</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>num<span class="token punctuation">;</span><span class="token comment">//int *p; p = #</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> data<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token operator">=</span><span class="token operator">&amp;</span>data<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u6307\u9488\u53D8\u91CF\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u53D8\u91CF\u7684\u7C7B\u578B" aria-hidden="true">#</a> \u6307\u9488\u53D8\u91CF\u7684\u7C7B\u578B</h3><h4 id="_1-\u6307\u9488\u53D8\u91CF\u81EA\u8EAB\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_1-\u6307\u9488\u53D8\u91CF\u81EA\u8EAB\u7684\u7C7B\u578B" aria-hidden="true">#</a> 1. \u6307\u9488\u53D8\u91CF\u81EA\u8EAB\u7684\u7C7B\u578B</h4><p>\u5C06\u6307\u9488\u53D8\u91CF\u540D\u62D6\u9ED1\uFF0C\u5269\u4E0B\u7684\u7C7B\u578B\u5C31\u662F\u6307\u9488\u53D8\u91CF\u81EA\u8EAB\u7684\u7C7B\u578B</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span> <span class="token comment">//p\u81EA\u8EAB\u7684\u7C7B\u578B\u4E3Aint *</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6307\u9488\u53D8\u91CF\u81EA\u8EAB\u7684\u7C7B\u578B \u4E00\u822C\u7528\u4E8E \u8D4B\u503C\u8BED\u53E5\u7684\u5224\u65AD</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test04</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>num<span class="token punctuation">;</span>
<span class="token comment">//\u5728\u4F7F\u7528\u4E2D</span>
<span class="token comment">//num \u4E3Aint &amp;num \u4E3Aint * \u2010\u2010\u2010\u2010&gt;\u5BF9\u53D8\u91CF\u540D \u53D6\u5730\u5740 \u6574\u4F53\u7C7B\u578B\u52A0\u4E00\u4E2A*</span>
<span class="token comment">//p \u4E3Aint * *p \u4E3Aint \u2010\u2010\u2010\u2010&gt;\u5BF9\u6307\u9488\u53D8\u91CF \u53D6* \u6574\u4F53\u7C7B\u578B\u51CF\u4E00\u4E2A*</span>
<span class="token comment">//\u5728\u4F7F\u7528\u4E2D &amp;\u548C*\u76F8\u9047 \u4ECE\u53F3\u5F80\u5DE6 \u4F9D\u6B21\u62B5\u6D88</span>
<span class="token operator">*</span><span class="token operator">&amp;</span>p <span class="token operator">==</span> p
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-\u6307\u9488\u53D8\u91CF\u6307\u5411\u7684\u7C7B\u578B-\u91CD\u8981" tabindex="-1"><a class="header-anchor" href="#_2-\u6307\u9488\u53D8\u91CF\u6307\u5411\u7684\u7C7B\u578B-\u91CD\u8981" aria-hidden="true">#</a> 2. \u6307\u9488\u53D8\u91CF\u6307\u5411\u7684\u7C7B\u578B(\u91CD\u8981)</h4><p>\u5C06\u6307\u9488\u53D8\u91CF\u540D\u548C\u79BB\u5B83\u6700\u8FD1\u7684\u4E00\u4E2A* \u4E00\u8D77\u62D6\u9ED1\uFF0C\u5269\u4E0B\u7684\u7C7B\u578B\u5C31\u662F\u6307\u9488\u53D8\u91CF\u6307\u5411\u7684\u7C7B\u578B</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span> <span class="token comment">//p\u6307\u5411\u7684\u7C7B\u578B\u4E3Aint</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u6307\u5411\u7C7B\u578B-\u51B3\u5B9A\u4E86\u53D6\u503C\u5BBD\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u6307\u5411\u7C7B\u578B-\u51B3\u5B9A\u4E86\u53D6\u503C\u5BBD\u5EA6" aria-hidden="true">#</a> \u6307\u5411\u7C7B\u578B \u51B3\u5B9A\u4E86<code>\u53D6\u503C\u5BBD\u5EA6</code></h3><h4 id="_1-\u77E5\u8BC6\u70B9\u7684\u5F15\u5165" tabindex="-1"><a class="header-anchor" href="#_1-\u77E5\u8BC6\u70B9\u7684\u5F15\u5165" aria-hidden="true">#</a> 1. \u77E5\u8BC6\u70B9\u7684\u5F15\u5165</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0x01020304</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>num<span class="token punctuation">;</span>
<span class="token comment">//\u4E3A\u5565 *p == num == 0x01020304?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6570\u636E\u5B58\u653E\u662F\u5927\u7AEF\u5B58\u653E\uFF0C\u6545\u6570\u636E\u5012\u7740\u5B58\u653E</p><p><img src="https://img30.360buyimg.com/pop/jfs/t1/219777/5/12520/26865/620a3a43Ee1128005/eaa3e6325f212883.png" alt="2022-02-14-19-17-14.png"></p><h3 id="\u6307\u5411\u7C7B\u578B-\u51B3\u5B9A\u4E86-1\u8DE8\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u6307\u5411\u7C7B\u578B-\u51B3\u5B9A\u4E86-1\u8DE8\u5EA6" aria-hidden="true">#</a> \u6307\u5411\u7C7B\u578B \u51B3\u5B9A\u4E86<code>+1\u8DE8\u5EA6</code></h3><p><img src="https://img30.360buyimg.com/pop/jfs/t1/210356/24/17300/27639/620a3b17Eee04a94f/758e51b74c46358a.png" alt="2022-02-14-19-20-47.png"></p><h4 id="\u6848\u4F8B\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B\u5206\u6790" aria-hidden="true">#</a> \u6848\u4F8B\u5206\u6790</h4><p><img src="https://img30.360buyimg.com/pop/jfs/t1/207890/40/17428/20258/620a3b56Eaef850ef/01b2a1c2741e099f.png" alt="2022-02-14-19-21-56.png"></p><p>\u53D6\u51FA<code>0x0102</code>\u7684\u503C</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0x01020304</span><span class="token punctuation">;</span>
    <span class="token keyword">short</span> <span class="token operator">*</span>p1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>num<span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%#x\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>p1 <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//0x102</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53D6\u51FA<code>0x02</code>\u7684\u503C</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0x01020304</span><span class="token punctuation">;</span>
    <span class="token keyword">short</span> <span class="token operator">*</span>p1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>num<span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%#x\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>p1 <span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//0x02</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53D6\u51FA<code>0x0203</code>\u7684\u503C</p><p><img src="https://img30.360buyimg.com/pop/jfs/t1/157367/21/27804/31910/620a3c7bE2e562dc6/234b58346d849d6c.png" alt="2022-02-14-19-26-43.png"></p><h3 id="p\u7B49\u4EF7num" tabindex="-1"><a class="header-anchor" href="#p\u7B49\u4EF7num" aria-hidden="true">#</a> <code>*p</code>\u7B49\u4EF7<code>num</code></h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>num<span class="token punctuation">;</span>
<span class="token comment">//p==&amp;num</span>
<span class="token comment">//*p == *&amp;num == num</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6307\u9488\u53D8\u91CF\u7684\u6CE8\u610F\u9879" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u53D8\u91CF\u7684\u6CE8\u610F\u9879" aria-hidden="true">#</a> \u6307\u9488\u53D8\u91CF\u7684\u6CE8\u610F\u9879</h3><h4 id="_1-void-\u4E0D\u80FD\u5B9A\u4E49\u666E\u901A\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#_1-void-\u4E0D\u80FD\u5B9A\u4E49\u666E\u901A\u53D8\u91CF" aria-hidden="true">#</a> 1. <code>void</code> \u4E0D\u80FD\u5B9A\u4E49\u666E\u901A\u53D8\u91CF</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code> <span class="token keyword">void</span> num<span class="token punctuation">;</span><span class="token comment">//error \u4E0D\u80FD\u7ED9num\u5F00\u8F9F\u7A7A\u95F4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-void-\u53EF\u4EE5\u5B9A\u4E49\u6307\u9488\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#_2-void-\u53EF\u4EE5\u5B9A\u4E49\u6307\u9488\u53D8\u91CF" aria-hidden="true">#</a> 2. <code>void *</code>\u53EF\u4EE5\u5B9A\u4E49\u6307\u9488\u53D8\u91CF</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token operator">*</span>p<span class="token punctuation">;</span><span class="token comment">//ok p\u81EA\u8EAB\u7C7B\u578B\u4E3Avoid *,\u572832\u4E3A\u5E73\u53F0\u4EFB\u610F\u7C7B\u578B\u7684\u6307\u9488 \u4E3A4B</span>
<span class="token comment">//\u90A3\u4E48\u7CFB\u7EDF\u77E5\u9053\u4E3Ap\u5F00\u8F9F4B\u7A7A\u95F4\uFF0C\u6240\u4EE5\u5B9A\u4E49\u6210\u529F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>p</code>\u5C31\u662F\u4E07\u80FD\u7684\u4E00\u7EA7\u6307\u9488\u53D8\u91CF\uFF0C\u80FD\u4FDD\u5B58\u4EFB\u610F\u4E00\u7EA7\u6307\u9488\u7684\u5730\u5740\u7F16\u53F7</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>num<span class="token punctuation">;</span>

    <span class="token keyword">short</span> data <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
    p <span class="token operator">=</span> <span class="token operator">&amp;</span>data<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E07\u80FD\u6307\u9488 \u4E00\u822C\u7528\u4E8E \u51FD\u6570\u7684\u5F62\u53C2 \u8FBE\u5230\u7B97\u6CD5\u64CD\u4F5C\u591A\u79CD\u6570\u636E\u7C7B\u578B\u7684\u76EE\u7684\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u8BB0\u4F4F\uFF1A\u4E0D\u8981\u76F4\u63A5\u5BF9<code>void *p</code>\u7684\u6307\u9488\u53D8\u91CF \u53D6<code>*</code></p></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>num<span class="token punctuation">;</span>
<span class="token operator">*</span>p<span class="token punctuation">;</span><span class="token comment">//err p\u6307\u5411\u7684\u7C7B\u578B\u4E3Avoid \u65E0\u6CD5\u786E\u5B9Ap\u7684\u53D6\u503C\u5BBD\u5EA6 \u6240\u4EE5\u4E0D\u80FD*p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9<code>p</code>\u53D6<code>*</code>\u4E4B\u524D \u5BF9<code>p</code>\u5148\u8FDB\u884C\u6307\u9488\u7C7B\u578B\u5F3A\u5236\u7C7B\u578B\u8F6C\u5316\u3002</p><h4 id="_3-\u6307\u9488\u53D8\u91CF-\u672A\u521D\u59CB\u5316-\u4E0D\u8981\u53D6" tabindex="-1"><a class="header-anchor" href="#_3-\u6307\u9488\u53D8\u91CF-\u672A\u521D\u59CB\u5316-\u4E0D\u8981\u53D6" aria-hidden="true">#</a> 3. \u6307\u9488\u53D8\u91CF \u672A\u521D\u59CB\u5316 \u4E0D\u8981\u53D6<code>*</code></h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
<span class="token operator">*</span>p<span class="token punctuation">;</span><span class="token comment">//err \u6BB5\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-\u6307\u9488\u53D8\u91CF-\u521D\u59CB\u5316null-\u4E0D\u8981\u53D6" tabindex="-1"><a class="header-anchor" href="#_4-\u6307\u9488\u53D8\u91CF-\u521D\u59CB\u5316null-\u4E0D\u8981\u53D6" aria-hidden="true">#</a> 4. \u6307\u9488\u53D8\u91CF \u521D\u59CB\u5316<code>NULL</code> \u4E0D\u8981\u53D6<code>*</code></h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
<span class="token operator">*</span>p<span class="token punctuation">;</span><span class="token comment">//err \u6BB5\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-\u6307\u9488\u53D8\u91CF-\u4E0D\u8981\u8D8A\u754C\u8BBF\u95EE" tabindex="-1"><a class="header-anchor" href="#_5-\u6307\u9488\u53D8\u91CF-\u4E0D\u8981\u8D8A\u754C\u8BBF\u95EE" aria-hidden="true">#</a> 5. \u6307\u9488\u53D8\u91CF \u4E0D\u8981\u8D8A\u754C\u8BBF\u95EE</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> ch <span class="token operator">=</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>ch<span class="token punctuation">;</span>
<span class="token operator">*</span>p<span class="token punctuation">;</span><span class="token comment">//error \u8D8A\u754C\u8BBF\u95EE\u975E\u6CD5\u5185\u5B58</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">10</span>\uFF1B
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>num<span class="token punctuation">;</span>
p<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token operator">*</span>p<span class="token punctuation">;</span><span class="token comment">//\u8D8A\u754C\u8BBF\u95EE</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u5143\u7D20\u7684\u6307\u9488\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5143\u7D20\u7684\u6307\u9488\u53D8\u91CF" aria-hidden="true">#</a> \u6570\u7EC4\u5143\u7D20\u7684\u6307\u9488\u53D8\u91CF</h3><h4 id="_1-\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_1-\u4F8B\u5B50" aria-hidden="true">#</a> 1. \u4F8B\u5B50</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">//\u9700\u6C42\u5B9A\u4E49\u4E00\u4E2A\u6307\u9488\u53D8\u91CF \u4FDD\u5B58 \u6570\u7EC4\u5143\u7D20\u7684\u5730\u5740</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
p <span class="token operator">=</span> <span class="token operator">&amp;</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
p <span class="token operator">=</span> arr<span class="token punctuation">;</span><span class="token comment">//arr\u4F5C\u4E3A\u5730\u5740 \u7B2C0\u4E2A\u5143\u7D20\u7684\u5730\u5740 arr==&amp;arr[0]</span>
p <span class="token operator">=</span> <span class="token operator">&amp;</span>arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-\u6570\u7EC4\u5143\u7D20\u7684\u6307\u9488\u53D8\u91CF-\u548C-\u6570\u7EC4\u540D-\u4F5C\u4E3A\u5730\u5740-\u7B49\u4EF7" tabindex="-1"><a class="header-anchor" href="#_2-\u6570\u7EC4\u5143\u7D20\u7684\u6307\u9488\u53D8\u91CF-\u548C-\u6570\u7EC4\u540D-\u4F5C\u4E3A\u5730\u5740-\u7B49\u4EF7" aria-hidden="true">#</a> 2. \u6570\u7EC4\u5143\u7D20\u7684\u6307\u9488\u53D8\u91CF \u548C \u6570\u7EC4\u540D\uFF08\u4F5C\u4E3A\u5730\u5740\uFF09\u7B49\u4EF7</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//10 20 30 40 50</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> arr<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>p <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//10 20 30 40 50</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>arr <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//10 20 30 40 50</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-\u5728\u4F7F\u7528\u4E2D-\u5C31\u662F-\u7684\u7F29\u5199" tabindex="-1"><a class="header-anchor" href="#_3-\u5728\u4F7F\u7528\u4E2D-\u5C31\u662F-\u7684\u7F29\u5199" aria-hidden="true">#</a> 3. \u5728\u4F7F\u7528\u4E2D<code>[]</code>\u5C31\u662F<code>*()</code>\u7684\u7F29\u5199</h4><p><strong>C\u8BED\u8A00\u7B49\u4EF7\u5173\u7CFB\uFF1A</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token operator">*</span><span class="token punctuation">(</span>arr <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>arr <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token operator">==</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;arr[1] = %d\\n&quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//20</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;*(arr+1) = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>arr <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//20</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;*(arr+1) = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//20</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;1[arr] = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">[</span>arr<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//20</span>
    <span class="token comment">//[]\u662F*\uFF08\uFF09\u7684\u7F29\u5199 []\u5DE6\u8FB9\u7684\u503C \u653E\u5728+\u7684\u5DE6\u8FB9 []\u91CC\u9762\u7684\u503C \u653E\u5728+\u53F3\u8FB9 \u6574\u4F53\u53D6*</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u4E3A\u5565<code>arr == &amp;arr[0]</code>?</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token operator">&amp;</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">&amp;</span><span class="token operator">*</span><span class="token punctuation">(</span>arr<span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> arr<span class="token operator">+</span><span class="token number">0</span> <span class="token operator">==</span> arr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u6848\u4F8B1\uFF1A<code>p[-1] == 30</code></strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> arr<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">;</span>
<span class="token comment">//p[-1] = arr[3-1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6848\u4F8B2\uFF1A<code>p[1] == 50</code></strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> arr<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">;</span>
<span class="token comment">//p[1] = arr[3+1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6307\u5411\u540C\u4E00\u6570\u7EC4\u5143\u7D20\u7684\u4E24\u4E2A\u6307\u9488\u53D8\u91CF\u95F4\u7684\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#\u6307\u5411\u540C\u4E00\u6570\u7EC4\u5143\u7D20\u7684\u4E24\u4E2A\u6307\u9488\u53D8\u91CF\u95F4\u7684\u5173\u7CFB" aria-hidden="true">#</a> \u6307\u5411\u540C\u4E00\u6570\u7EC4\u5143\u7D20\u7684\u4E24\u4E2A\u6307\u9488\u53D8\u91CF\u95F4\u7684\u5173\u7CFB</h3><p><img src="https://img30.360buyimg.com/pop/jfs/t1/147131/12/23230/39309/6217847cE9e051df0/f6b3b0443ffa658c.png" alt="2022-02-24-21-12-30.png"></p><h2 id="\u6307\u9488\u9AD8\u7EA7" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u9AD8\u7EA7" aria-hidden="true">#</a> \u6307\u9488\u9AD8\u7EA7</h2><h3 id="\u5B57\u7B26\u4E32\u4E0E\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u4E0E\u6307\u9488" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u4E0E\u6307\u9488</h3><h4 id="\u5B57\u7B26\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u6570\u7EC4" aria-hidden="true">#</a> \u5B57\u7B26\u6570\u7EC4</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> str1<span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>str1\u662F\u6570\u7EC4 \u5F00\u8F9F128\u5B57\u8282 \u5B58\u653E\u5B57\u7B26\u4E32&quot;hello world&quot; <img src="https://img30.360buyimg.com/pop/jfs/t1/113189/8/21133/12908/62178622E15482269/c182df132f7d0a46.png" alt="2022-02-24-21-20-15.png"></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">sizeof</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">128</span>\u5B57\u8282
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="\u5B57\u7B26\u4E32\u6307\u9488\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u6307\u9488\u53D8\u91CF" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u6307\u9488\u53D8\u91CF</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> <span class="token operator">*</span>str2<span class="token operator">=</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://img30.360buyimg.com/pop/jfs/t1/93555/39/23550/31026/621786a0E55227cc3/5d882b33abcc4dd6.png" alt="2022-02-24-21-22-09.png"></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">sizeof</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">4</span>\u5B57\u8282 \u6216 <span class="token number">8</span>\u5B57\u8282
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>str2</code>\u662F\u6307\u9488\u53D8\u91CF \u5728\u6808\u533A/\u5168\u5C40\u533A \u4FDD\u5B58\u7684\u662F\u5B57\u7B26\u4E32\u5E38\u91CF<code>&quot;hello world&quot;</code>\u7684\u9996\u5143\u7D20\u5730\u5740\uFF0C\u800C<code>\u201Dhello world\u201C</code>\u5728\u6587\u5B57\u5E38\u91CF\u533A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>str2 <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\n&quot;</span><span class="token punctuation">,</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hello world</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c\\n&quot;</span><span class="token punctuation">,</span>str2<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//w</span>
    str<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;W&#39;</span><span class="token punctuation">;</span><span class="token comment">//error \u4E0D\u5141\u8BB8\u7ED9\u6587\u5B57\u5E38\u91CF\u533A\u8D4B\u503C</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6307\u9488\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u6570\u7EC4" aria-hidden="true">#</a> \u6307\u9488\u6570\u7EC4</h3><p>\u6307\u9488\u6570\u7EC4\uFF1A\u672C\u8D28\u662F\u6570\u7EC4 \u53EA\u662F\u6570\u7EC4\u7684\u6BCF\u4E2A\u5143\u7D20\u4E3A \u6307\u9488\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//32\u4F4D</span>
<span class="token keyword">char</span> <span class="token operator">*</span>arr1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">short</span> <span class="token operator">*</span>arr2<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>arr3<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token number">16</span>B
<span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token number">16</span>B
<span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr3<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token number">16</span>B
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6570\u503C\u7684\u6307\u9488\u6570\u7EC4-int" tabindex="-1"><a class="header-anchor" href="#\u6570\u503C\u7684\u6307\u9488\u6570\u7EC4-int" aria-hidden="true">#</a> \u6570\u503C\u7684\u6307\u9488\u6570\u7EC4\uFF08<code>int</code>\uFF09</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> num2 <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> num3 <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> num4 <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> <span class="token operator">*</span>arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">&amp;</span>num1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>num2<span class="token punctuation">,</span> <span class="token operator">&amp;</span>num3<span class="token punctuation">,</span> <span class="token operator">&amp;</span>num4<span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u4FDD\u5B58\u5728\u6808\u533A</span>
        <span class="token comment">//10 20 30 40</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5B57\u7B26\u7684\u6307\u9488\u6570\u7EC4-char" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u7684\u6307\u9488\u6570\u7EC4-char" aria-hidden="true">#</a> \u5B57\u7B26\u7684\u6307\u9488\u6570\u7EC4(<code>char</code>)</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> <span class="token operator">*</span>arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;hehehehe&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xixixixixi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lalalalala&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hahahahaha&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;hehehehe&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xixixixixi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lalalalala&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hahahahaha&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c\\n&quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u4FDD\u5B58\u5728\u5E38\u91CF\u533A\uFF0C\u53EA\u8BFB</span>
        <span class="token comment">//hehehehe xixixixixi lalalalala hahahahaha</span>

        <span class="token comment">//\u4E3B\u8981\u539F\u56E0\u662F%s\u904D\u5386\u5B57\u7B26\u4E32\u53EA\u8981\u6C42\u7ED9\u9996\u5730\u5740\u5373\u53EF \u6240\u4EE5\u7528arr\u5373\u53EF \u4E0D\u7528*arr</span>
        <span class="token comment">//*arr[i] = h    x    l   h  \u9996\u5B57\u6BCD</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4E8C\u7EF4\u5B57\u7B26\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u7EF4\u5B57\u7B26\u6570\u7EC4" aria-hidden="true">#</a> \u4E8C\u7EF4\u5B57\u7B26\u6570\u7EC4</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> <span class="token operator">*</span>arr1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;hehehehe&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xixixixixi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lalalalala&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hahahahaha&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> arr2<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;hehehehe&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xixixixixi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lalalalala&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hahahahaha&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>arr1</code>\u662F\u5728\u6307\u9488\u6570\u7EC4 \u5B58\u653E\u7684\u662F\u6BCF\u4E2A\u5B57\u7B26\u4E32\u7684\u9996\u5143\u7D20\u7684\u5730\u5740 <code>arr2</code>\u662F\u4E8C\u7EF4\u5B57\u7B26\u6570\u7EC4 \u5B58\u653E\u7684\u662F\u6BCF\u4E2A\u5B57\u7B26\u4E32</p><h3 id="\u6307\u9488\u7684\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u7684\u6307\u9488" aria-hidden="true">#</a> \u6307\u9488\u7684\u6307\u9488</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>num<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>q <span class="token operator">=</span> <span class="token operator">&amp;</span>p<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>n</code>\u7EA7\u6307\u9488\u53D8\u91CF\u53EF\u4EE5\u4FDD\u5B58<code>n-1</code>\u7EA7\u7684\u5730\u5740</p><h3 id="\u6570\u7EC4\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6307\u9488" aria-hidden="true">#</a> \u6570\u7EC4\u6307\u9488</h3><h4 id="_1-\u6570\u7EC4\u9996\u5143\u7D20\u5730\u5740-\u548C-\u6570\u7EC4\u9996\u5730\u5740" tabindex="-1"><a class="header-anchor" href="#_1-\u6570\u7EC4\u9996\u5143\u7D20\u5730\u5740-\u548C-\u6570\u7EC4\u9996\u5730\u5740" aria-hidden="true">#</a> 1. \u6570\u7EC4\u9996\u5143\u7D20\u5730\u5740 \u548C \u6570\u7EC4\u9996\u5730\u5740</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6570\u7EC4\u7684<strong>\u9996\u5143\u7D20</strong>\u5730\u5740\uFF1A<code>&amp;arr[0] == arr</code> <code>+1</code>\u8DF3\u8FC7\u4E00\u4E2A\u5143\u7D20 \u6570\u7EC4\u7684<strong>\u9996\u5730\u5740</strong>\uFF1A<code>&amp;arr</code> <code>+1</code>\u8DF3\u8FC7\u6574\u4E2A\u6570\u7EC4</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test04</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">//arr\u9996\u5143\u7D20\u5730\u5740 +1 \u8DF3\u8FC7\u4E00\u4E2A\u5143\u7D20</span>
    <span class="token comment">//&amp;arr\u9996\u5730\u5740 +1 \u8DF3\u8FC7\u4E00\u4E2A\u6570\u7EC4</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;arr=%u\\n&quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;arr=%u\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;arr+1=%u\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>arr <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6570\u7EC4<strong>\u9996\u5143\u7D20\u5730\u5740</strong>\u7F16\u53F7\u548C<strong>\u6570\u7EC4\u7684\u9996\u5730\u5740</strong>\u7F16\u53F7 \u4E00\u81F4,\u4F46\u662F\u4ED6\u4EEC\u7684\u7C7B\u578B\u4E0D\u540C</p><h4 id="_2-\u6570\u7EC4\u6307\u9488-\u672C\u8D28\u662F\u6307\u9488\u53D8\u91CF-\u4FDD\u5B58\u7684\u662F\u6570\u7EC4\u7684\u9996\u5730\u5740\u3002" tabindex="-1"><a class="header-anchor" href="#_2-\u6570\u7EC4\u6307\u9488-\u672C\u8D28\u662F\u6307\u9488\u53D8\u91CF-\u4FDD\u5B58\u7684\u662F\u6570\u7EC4\u7684\u9996\u5730\u5740\u3002" aria-hidden="true">#</a> 2. \u6570\u7EC4\u6307\u9488 \u672C\u8D28\u662F\u6307\u9488\u53D8\u91CF \u4FDD\u5B58\u7684\u662F\u6570\u7EC4\u7684\u9996\u5730\u5740\u3002</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token comment">//\u6570\u7EC4\u6307\u9488</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">//\u6570\u7EC4\u6307\u9488 \u672C\u8D28\u662F\u6307\u9488\u53D8\u91CF</span>
    <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;sizeof(p) =%lu\\n&quot;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 8B</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;p = %u\\n&quot;</span><span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//p = 0</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;p+1 = %u\\n&quot;</span><span class="token punctuation">,</span>p<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//p = 20</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h5><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>arr<span class="token punctuation">;</span><span class="token comment">//\u6570\u7EC4\u6307\u9488</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://img30.360buyimg.com/pop/jfs/t1/217930/17/13308/42459/62178d00E3b7f0ca6/fd8d34ae2877a2db.png" alt="2022-02-24-21-49-41.png"></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">//\u6570\u7EC4\u6307\u9488 \u672C\u8D28\u662F\u6307\u9488\u53D8\u91CF</span>
    <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;sizeof(p) =%lu\\n&quot;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 8B</span>

    p <span class="token operator">=</span> <span class="token operator">&amp;</span>arr<span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;arr[2] = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 30</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6848\u4F8B1-\u4EE5\u4E0B\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B1-\u4EE5\u4E0B\u7ED3\u679C" aria-hidden="true">#</a> \u6848\u4F8B1\uFF1A\u4EE5\u4E0B\u7ED3\u679C</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>arr<span class="token punctuation">;</span><span class="token comment">//\u6570\u7EC4\u6307\u9488</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>p<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>\u2010<span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//40</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>(p+1)</code>\u8DF3\u8FC7\u6574\u4E2A\u6570\u7EC4\uFF0C<code>(int *)</code>\u5F3A\u5236\u8F6C\u5316\u4E3A<code>int</code>\u7C7B\u578B\u6307\u9488\uFF0C<code>-2</code>\u5C31\u53EA\u80FD\u8DF3\u5143\u7D20</p><p><strong>\u603B\u7ED3\uFF1A</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token operator">*</span>arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//\u6307\u9488\u6570\u7EC4 \u672C\u8D28\u662F\u6570\u7EC4 \u6BCF\u4E2A\u5143\u7D20\u4E3Aint *</span>
<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>arr<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//\u6570\u7EC4\u6307\u9488 \u672C\u8D28\u662F\u6307\u9488\u53D8\u91CF \u4FDD\u5B58\u7684\u662F\u6570\u7EC4\u7684\u9996\u5730\u5740\uFF08\u6982\u6570\u7EC4\u5FC5\u987B5\u4E2A\u5143\u7D20\u6BCF\u4E2A\u5143\u7D20\u4E3Aint\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E8C\u7EF4\u6570\u7EC4\u548C\u6570\u7EC4\u6307\u9488\u7684\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u7EF4\u6570\u7EC4\u548C\u6570\u7EC4\u6307\u9488\u7684\u5173\u7CFB" aria-hidden="true">#</a> \u4E8C\u7EF4\u6570\u7EC4\u548C\u6570\u7EC4\u6307\u9488\u7684\u5173\u7CFB</h3><h4 id="\u6DF1\u5165\u4E86\u89E3\u4E8C\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u5165\u4E86\u89E3\u4E8C\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u6DF1\u5165\u4E86\u89E3\u4E8C\u7EF4\u6570\u7EC4</h4><p><img src="https://img30.360buyimg.com/pop/jfs/t1/158275/32/27674/54021/62178fe6E87ce5e75/7de9aac27460d4e8.png" alt="2022-02-24-22-02-04.png"></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token operator">*</span><span class="token punctuation">(</span>arr<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> \u7B2C\u4E00\u884C\u7B2C<span class="token number">0</span>\u5217\u7684\u5217\u5730\u5740
<span class="token operator">&amp;</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span><span class="token operator">*</span>\uFF08arr<span class="token operator">+</span><span class="token number">1</span>\uFF09<span class="token operator">=</span><span class="token operator">&gt;</span>arr<span class="token operator">+</span><span class="token number">1</span> \u7B2C<span class="token number">1</span>\u884C\u7684\u884C\u5730\u5740
<span class="token operator">*</span>arr<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">=</span><span class="token operator">&gt;</span> \u7B2C<span class="token number">0</span>\u884C\u7B2C<span class="token number">1</span>\u5217\u7684\u5217\u5730\u5740
arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">2</span> <span class="token operator">=</span><span class="token operator">&gt;</span><span class="token operator">*</span><span class="token punctuation">(</span>arr<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">2</span> <span class="token operator">=</span><span class="token operator">&gt;</span>\u7B2C<span class="token number">1</span>\u884C\u7B2C<span class="token number">2</span>\u5217\u7684\u5217\u5730\u5740
<span class="token operator">*</span><span class="token operator">*</span>arr <span class="token operator">==</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>arr<span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4E8C\u7EF4\u6570\u7EC4\u548C\u4E00\u7EF4\u6570\u7EC4\u6307\u9488\u7684\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u7EF4\u6570\u7EC4\u548C\u4E00\u7EF4\u6570\u7EC4\u6307\u9488\u7684\u5173\u7CFB" aria-hidden="true">#</a> \u4E8C\u7EF4\u6570\u7EC4\u548C\u4E00\u7EF4\u6570\u7EC4\u6307\u9488\u7684\u5173\u7CFB</h4><p><img src="https://img30.360buyimg.com/pop/jfs/t1/124302/9/23893/59372/6217904aEaa18bd8e/769794902c31241e.png" alt="2022-02-24-22-03-44.png"></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> arr<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
<span class="token keyword">int</span> arr<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> arr<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>n</code>\u7EF4\u6570\u7EC4 \u548C<code>n\u20101</code>\u7EF4\u7684\u6570\u7EC4\u6307\u9488 \u7B49\u4EF7</p><h3 id="\u591A\u7EF4\u6570\u7EC4\u7684\u7269\u7406\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#\u591A\u7EF4\u6570\u7EC4\u7684\u7269\u7406\u5B58\u50A8" aria-hidden="true">#</a> \u591A\u7EF4\u6570\u7EC4\u7684\u7269\u7406\u5B58\u50A8</h3><p>\u4E0D\u7BA1\u51E0\u7EF4\u6570\u7EC4\u5728\u7269\u7406\u4E0A \u90FD\u662F\u4E00\u7EF4\u5B58\u50A8</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> row <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> row <span class="token operator">*</span> col<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token comment">//1 2 3 4 5 6 7 8 9 10 11 12 13 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6307\u9488\u53D8\u91CF\u4F5C\u4E3A\u51FD\u6570\u7684\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u6307\u9488\u53D8\u91CF\u4F5C\u4E3A\u51FD\u6570\u7684\u53C2\u6570" aria-hidden="true">#</a> \u6307\u9488\u53D8\u91CF\u4F5C\u4E3A\u51FD\u6570\u7684\u53C2\u6570</h3><p>\u5982\u679C\u60F3\u5728\u51FD\u6570\u5185\u90E8 \u4FEE\u6539\u5916\u90E8\u53D8\u91CF\u7684\u503C \u9700\u8981\u5C06\u5916\u90E8\u53D8\u91CF\u7684\u5730\u5740 \u4F20\u9012\u7ED9\u51FD\u6570\u3002\uFF08\u91CD\u8981\uFF09</p><h4 id="\u6848\u4F8B1-\u5355\u5411\u4F20\u9012-\u4E4B-\u503C\u4F20\u9012" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B1-\u5355\u5411\u4F20\u9012-\u4E4B-\u503C\u4F20\u9012" aria-hidden="true">#</a> \u6848\u4F8B1\uFF1A\u5355\u5411\u4F20\u9012 \u4E4B \u503C\u4F20\u9012</h4><p>\u51FD\u6570\u5185\u90E8 \u4E0D\u80FD\u4FEE\u6539\u5916\u90E8\u53D8\u91CF\u7684\u503C</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">set_data</span><span class="token punctuation">(</span><span class="token keyword">int</span> d<span class="token punctuation">)</span> <span class="token comment">//int d = num</span>
<span class="token punctuation">{</span>
    d <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token function">set_data</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u4F20\u503C</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;num = %d\\n&quot;</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token comment">//num = 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6848\u4F8B2-\u5355\u5411\u4F20\u9012-\u4E4B-\u4F20\u9012\u5730\u5740" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B2-\u5355\u5411\u4F20\u9012-\u4E4B-\u4F20\u9012\u5730\u5740" aria-hidden="true">#</a> \u6848\u4F8B2\uFF1A\u5355\u5411\u4F20\u9012 \u4E4B \u4F20\u9012\u5730\u5740</h4><p>\u51FD\u6570\u5185\u90E8 \u5C31\u53EF\u4EE5\u4FEE\u6539 \u5916\u90E8\u53D8\u91CF\u7684\u503C</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">set_data</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">)</span> <span class="token comment">//int *p = &amp;num;</span>
<span class="token punctuation">{</span>
    <span class="token comment">//p == &amp;num   --&gt; *p = num</span>
    <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">//num = 100</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token function">set_data</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u4F20\u5730\u5740</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;num = %d\\n&quot;</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6848\u4F8B3-\u4EE5\u4E0B\u4EE3\u7801\u80FD\u5426\u4EA4\u6362data1-\u548C-data2\u7684\u503C-\u5426" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B3-\u4EE5\u4E0B\u4EE3\u7801\u80FD\u5426\u4EA4\u6362data1-\u548C-data2\u7684\u503C-\u5426" aria-hidden="true">#</a> \u6848\u4F8B3\uFF1A\u4EE5\u4E0B\u4EE3\u7801\u80FD\u5426\u4EA4\u6362data1 \u548C data2\u7684\u503C\uFF08\u5426\uFF09</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> tmp<span class="token operator">=</span> a<span class="token punctuation">;</span> a<span class="token operator">=</span>b<span class="token punctuation">;</span>b<span class="token operator">=</span>tmp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">swap</span><span class="token punctuation">(</span>data1<span class="token punctuation">,</span> data2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6848\u4F8B4-\u4EE5\u4E0B\u4EE3\u7801\u80FD\u5426\u4EA4\u6362data1-\u548C-data2\u7684\u503C-\u80FD" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B4-\u4EE5\u4E0B\u4EE3\u7801\u80FD\u5426\u4EA4\u6362data1-\u548C-data2\u7684\u503C-\u80FD" aria-hidden="true">#</a> \u6848\u4F8B4\uFF1A\u4EE5\u4E0B\u4EE3\u7801\u80FD\u5426\u4EA4\u6362data1 \u548C data2\u7684\u503C\uFF08\u80FD\uFF09</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>a<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>b<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//*a == data1 *b == data2</span>
    <span class="token keyword">int</span> tmp<span class="token operator">=</span> <span class="token operator">*</span>a<span class="token punctuation">;</span> <span class="token operator">*</span>a<span class="token operator">=</span><span class="token operator">*</span>b<span class="token punctuation">;</span><span class="token operator">*</span>b<span class="token operator">=</span>tmp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">swap</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>data2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570" aria-hidden="true">#</a> \u6570\u7EC4\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570</h3><p>\u51FD\u6570\u5185\u90E8 \u60F3\u64CD\u4F5C\uFF08\u8BFB\u6216\u5199\uFF09\u5916\u90E8\u6570\u7EC4\u5143\u7D20\uFF0C\u5C06\u6570\u7EC4\u540D \u4F20\u9012\u7ED9\u51FD\u6570\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u4E00\u7EF4\u6570\u7EC4\u4F5C\u4E3A\u51FD\u6570\u7684\u5F62\u53C2 \u4F1A\u88AB\u7F16\u8BD1\u5668 \u4F18\u5316\u6210 \u6307\u9488\u53D8\u91CF</span>
<span class="token comment">//void printf_int_array(int p[5], int n)</span>
<span class="token keyword">void</span> <span class="token function">printf_int_array</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;sizeof(p)=%lu\\n&quot;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//8B</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//printf(&quot;%d &quot;, *(p+i));</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;sizeof(arr)=%lu\\n&quot;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//20B</span>
    <span class="token function">printf_int_array</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6848\u4F8B-\u6C42\u6570\u7EC4\u6700\u5927\u503C\u4EE5\u53CA\u6700\u5C0F\u503C" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B-\u6C42\u6570\u7EC4\u6700\u5927\u503C\u4EE5\u53CA\u6700\u5C0F\u503C" aria-hidden="true">#</a> \u6848\u4F8B\uFF1A\u6C42\u6570\u7EC4\u6700\u5927\u503C\u4EE5\u53CA\u6700\u5C0F\u503C</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">input_int_array</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165%d\u4E2Aint\u6570\u636E:&quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> p <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">get_max_min_data</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>arr<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>p_max<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>p_min<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> max <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> min <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>max <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            max <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>min <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            min <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//*p_max = \u5916\u90E8max *p_min==\u5916\u90E8\u7684min</span>
    <span class="token operator">*</span>p_max <span class="token operator">=</span> max<span class="token punctuation">;</span>
    <span class="token operator">*</span>p_min <span class="token operator">=</span> min<span class="token punctuation">;</span>

    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u83B7\u53D6\u952E\u76D8\u8F93\u5165</span>
    <span class="token function">input_int_array</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u6C42\u6700\u5927\u6700\u5C0F\u503C</span>
    <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> min <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token function">get_max_min_data</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>max<span class="token punctuation">,</span> <span class="token operator">&amp;</span>min<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;max=%d, min=%d\\n&quot;</span><span class="token punctuation">,</span> max<span class="token punctuation">,</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6848\u4F8B-\u4EE5\u4E0B\u6848\u4F8B\u8F93\u51FA\u7684\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B-\u4EE5\u4E0B\u6848\u4F8B\u8F93\u51FA\u7684\u7ED3\u679C" aria-hidden="true">#</a> \u6848\u4F8B\uFF1A\u4EE5\u4E0B\u6848\u4F8B\u8F93\u51FA\u7684\u7ED3\u679C</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">my_fun</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n \u2010 <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">my_fun</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token comment">//20 30 40 50 50</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E8C\u7EF4\u6570\u7EC4\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u7EF4\u6570\u7EC4\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570" aria-hidden="true">#</a> \u4E8C\u7EF4\u6570\u7EC4\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570</h3><p>\u51FD\u6570\u5185\u90E8 \u60F3\u64CD\u4F5C \u51FD\u6570\u5916\u90E8\u7684\u4E8C\u7EF4\u6570\u7EC4 \u9700\u8981\u5C06\u4E8C\u7EF4\u6570\u7EC4\u540D \u4F20\u9012\u7ED9\u51FD\u6570\u3002</p><p>\u4E8C\u7EF4\u6570\u7EC4 \u4F5C\u4E3A\u51FD\u6570\u7684\u5F62\u53C2 \u4F1A\u88AB\u4F18\u5316\u6210 \u4E00\u7EF4\u7684\u6570\u7EC4\u6307\u9488</p><p><code>int arr[3][4][5]</code> \u4E09\u7EF4\u6570\u7EC4 \u4F5C\u4E3A\u51FD\u6570\u5F62\u53C2 \u4F1A\u88AB\u4F18\u5316\u6210 \u4E8C\u7EF4\u7684\u6570\u7EC4\u6307\u9488 <code>int (*arr)[4][5]</code></p><p><code>n</code>\u7EF4\u6570\u7EC4 \u4F5C\u4E3A\u51FD\u6570\u5F62\u53C2 \u4F1A\u88AB\u4F18\u5316\u6210<code>n-1</code>\u7EF4\u7684\u6570\u7EC4\u6307\u9488</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u4E8C\u7EF4\u6570\u7EC4 \u4F5C\u4E3A\u51FD\u6570\u7684\u5F62\u53C2 \u4F1A\u88AB\u4F18\u5316\u6210 \u4E00\u7EF4\u7684\u6570\u7EC4\u6307\u9488</span>
<span class="token comment">//void printf_int_two_array(int arr[3][4], int row, int col)</span>
<span class="token keyword">void</span> <span class="token function">printf_int_two_array</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>arr<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> row<span class="token punctuation">,</span> <span class="token keyword">int</span> col<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5185\u90E8sizeof(arr)=%lu\\n&quot;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//8B</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> row<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> col<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> row <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5916\u90E8sizeof(arr)=%lu\\n&quot;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//48B</span>
<span class="token function">printf_int_two_array</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> row<span class="token punctuation">,</span> col<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B-\u4E3A\u6307\u9488\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B-\u4E3A\u6307\u9488\u7C7B\u578B" aria-hidden="true">#</a> \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B \u4E3A\u6307\u9488\u7C7B\u578B</h3><p>\u5C06\u51FD\u6570\u5185\u90E8\u7684\u5408\u6CD5\u5730\u5740 \u901A\u8FC7\u8FD4\u56DE\u503C \u8FD4\u56DE\u7ED9\u51FD\u6570\u5916\u90E8\u4F7F\u7528\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u51FD\u6570\u4E0D\u8981\u8FD4\u56DE\u503C \u666E\u901A\u5C40\u90E8\u53D8\u91CF\u7684\u5730\u5740</p></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">get_addr</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> data <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
  
    <span class="token keyword">return</span> <span class="token operator">&amp;</span>data<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    p <span class="token operator">=</span> <span class="token function">get_addr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//p=&amp;data</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;*p = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//*p == data</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u63D0\u9AD8</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">get_addr</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token operator">*</span>q<span class="token punctuation">)</span> <span class="token comment">//int **q = &amp;p;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> data <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token comment">//q==&amp;p</span>
    <span class="token comment">//*q == *&amp;p ==p</span>
    <span class="token comment">//p = &amp;data</span>
    <span class="token operator">*</span>q <span class="token operator">=</span> <span class="token operator">&amp;</span>data<span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token function">get_addr</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//p=&amp;data</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;*p = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//*p == data</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u6307\u9488" aria-hidden="true">#</a> \u51FD\u6570\u6307\u9488</h3><h4 id="_1-\u51FD\u6570\u6307\u9488\u7684\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#_1-\u51FD\u6570\u6307\u9488\u7684\u5B9A\u4E49" aria-hidden="true">#</a> 1. \u51FD\u6570\u6307\u9488\u7684\u5B9A\u4E49</h4><p>\u51FD\u6570\u540D \u4EE3\u8868\u51FD\u6570\u7684\u5165\u53E3\u5730\u5740</p><p>\u51FD\u6570\u6307\u9488\uFF1A\u672C\u8D28\u662F\u4E00\u4E2A\u6307\u9488\u53D8\u91CF \u53EA\u662F\u8BE5\u53D8\u91CF \u4FDD\u5B58\u7684\u662F\u51FD\u6570\u7684\u5165\u53E3\u5730\u5740</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u51FD\u6570\u6307\u9488 p\u53EA\u80FD\u4FDD\u5B58 \u6709\u4E24int\u5F62\u53C2\u4EE5\u53CAint\u8FD4\u56DE\u503C \u7684\u51FD\u6570\u5165\u53E3\u5730\u5740</span>
<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">my_add</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u51FD\u6570\u6307\u9488 p\u53EA\u80FD\u4FDD\u5B58 \u6709\u4E24\u4E2Aint\u5F62\u53C2\u4EE5\u53CAint\u8FD4\u56DE\u503C \u7684\u51FD\u6570\u5165\u53E3\u5730\u5740</span>
    <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%lu\\n&quot;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    p <span class="token operator">=</span> my_add<span class="token punctuation">;</span> <span class="token comment">//\u5C06my_add\u7684\u5165\u53E3\u5730\u5740\u8D4B\u503C\u7ED9\u4E86p</span>

    <span class="token comment">//\u51FD\u6570\u8C03\u7528\uFF1A\u5165\u53E3\u5730\u5740 + \uFF08\uFF09</span>
    <span class="token comment">// printf(&quot;%d\\n&quot;, my_add(10 ,20))</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span><span class="token function">p</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-\u51FD\u6570\u6307\u9488\u53D8\u91CF\u6CE8\u610F" tabindex="-1"><a class="header-anchor" href="#_2-\u51FD\u6570\u6307\u9488\u53D8\u91CF\u6CE8\u610F" aria-hidden="true">#</a> 2. \u51FD\u6570\u6307\u9488\u53D8\u91CF\u6CE8\u610F</h4><p>\u51FD\u6570\u6307\u9488\u53D8\u91CF \u4E0D\u8981+1 \u65E0\u610F\u4E49</p><p>\u4E0D\u8981\u5BF9\u51FD\u6570\u6307\u9488\u53D8\u91CF\u53D6* \u65E0\u610F\u4E49</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">=</span> my_add<span class="token punctuation">;</span>
<span class="token operator">*</span>p\u4F1A\u88AB\u7F16\u8BD1\u5668\u4F18\u5316\u6210p
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">my_add</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u51FD\u6570\u6307\u9488 p\u53EA\u80FD\u4FDD\u5B58 \u6709\u4E24\u4E2Aint\u5F62\u53C2\u4EE5\u53CAint\u8FD4\u56DE\u503C \u7684\u51FD\u6570\u5165\u53E3\u5730\u5740</span>
    <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%lu\\n&quot;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    p <span class="token operator">=</span> my_add<span class="token punctuation">;</span> <span class="token comment">//\u5C06my_add\u7684\u5165\u53E3\u5730\u5740\u8D4B\u503C\u7ED9\u4E86p</span>

    <span class="token comment">//\u51FD\u6570\u8C03\u7528\uFF1A\u5165\u53E3\u5730\u5740 + \uFF08\uFF09</span>
    <span class="token comment">// printf(&quot;%d\\n&quot;, my_add(10 ,20))</span>
    <span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>print<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51FD\u6570\u6307\u9488\u53D8\u91CF \u5224\u65AD\u5927\u5C0F <code>&gt;</code> <code>&lt;</code> \u65E0\u610F\u4E49 \u51FD\u6570\u6307\u9488\u53D8\u91CF \u53EF\u4EE5\u8D4B\u503C <code>p2 = p1</code> \u51FD\u6570\u6307\u9488\u53D8\u91CF \u53EF\u4EE5\u5224\u65AD\u76F8\u7B49 <code>p2 == p1</code></p><h4 id="_3-\u51FD\u6570\u6307\u9488\u53D8\u91CF-\u4F7F\u7528typedef\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#_3-\u51FD\u6570\u6307\u9488\u53D8\u91CF-\u4F7F\u7528typedef\u5B9A\u4E49" aria-hidden="true">#</a> 3. \u51FD\u6570\u6307\u9488\u53D8\u91CF \u4F7F\u7528typedef\u5B9A\u4E49</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">=</span> my_add<span class="token punctuation">;</span>
<span class="token operator">*</span>p\u4F1A\u88AB\u7F16\u8BD1\u5668\u4F18\u5316\u6210p
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">my_add</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u51FD\u6570\u6307\u9488\u7C7B\u578B</span>
    <span class="token keyword">typedef</span> <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span> FUN_TYPE<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>

    FUN_TYPE p <span class="token operator">=</span> my_add<span class="token punctuation">;</span> <span class="token comment">//\u5C06my_add\u7684\u5165\u53E3\u5730\u5740\u8D4B\u503C\u7ED9\u4E86p</span>

    <span class="token comment">//\u51FD\u6570\u8C03\u7528\uFF1A\u5165\u53E3\u5730\u5740 + \uFF08\uFF09</span>
    <span class="token comment">// printf(&quot;%d\\n&quot;, my_add(10 ,20))</span>
    <span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>print<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>p<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6269\u5C55\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">my_add</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%p\\n&quot;</span><span class="token punctuation">,</span> my_add<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0x400c0f</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u76F4\u63A5\u5C06\u51FD\u6570\u5165\u53E3\u5730\u5740\u653E\u5165\u6267\u884C</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u6307\u9488-\u4F5C\u4E3A\u51FD\u6570\u7684\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u6307\u9488-\u4F5C\u4E3A\u51FD\u6570\u7684\u53C2\u6570" aria-hidden="true">#</a> \u51FD\u6570\u6307\u9488 \u4F5C\u4E3A\u51FD\u6570\u7684\u53C2\u6570</h3><h4 id="\u6848\u4F8B1-my-calc\u5B8C\u6210\u52A0\u51CF\u4E58\u9664" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B1-my-calc\u5B8C\u6210\u52A0\u51CF\u4E58\u9664" aria-hidden="true">#</a> \u6848\u4F8B1\uFF1Amy_calc\u5B8C\u6210\u52A0\u51CF\u4E58\u9664</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">my_add</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">my_sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">-</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">my_mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">my_div</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">/</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u8BBE\u8BA1\u7B97\u6CD5 \u5B8C\u6210\u52A0\u51CF\u4E58\u9664</span>
<span class="token keyword">int</span> <span class="token function">my_calc</span><span class="token punctuation">(</span><span class="token keyword">int</span> d1<span class="token punctuation">,</span> <span class="token keyword">int</span> d2<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>func<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">(</span>d1<span class="token punctuation">,</span> d2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">my_calc</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> my_add<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">my_calc</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> my_sub<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">my_calc</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> my_mul<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">my_calc</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> my_div<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6848\u4F8B2-\u5B8C\u6210\u52A0\u51CF\u4E58\u9664" tabindex="-1"><a class="header-anchor" href="#\u6848\u4F8B2-\u5B8C\u6210\u52A0\u51CF\u4E58\u9664" aria-hidden="true">#</a> \u6848\u4F8B2\uFF1A\u5B8C\u6210\u52A0\u51CF\u4E58\u9664</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">my_add</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">my_sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">-</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">my_mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">my_div</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">/</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>cmd_buf<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;add&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;sub&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mul&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>cmd_buf<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>cmd_buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u51FD\u6570\u6307\u9488\u6570\u7EC4</span>
    <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>fun_arr<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span>my_add<span class="token punctuation">,</span> my_sub<span class="token punctuation">,</span> my_mul<span class="token punctuation">,</span> my_div<span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u8BA1\u7B97\u683C\u5F0F:add 10 20:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> cmd<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> <span class="token string">&quot;quit&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> data1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> data2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>data2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u7B97\u6CD5\u6838\u5FC3</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//\u76F8\u7B49\u4E3A0</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> cmd_buf<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u7ED3\u679C:%d\\n&quot;</span><span class="token punctuation">,</span> fun_arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>data1<span class="token punctuation">,</span> data2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,186);function Y(S,W){const a=o("RouterLink");return c(),i("div",null,[r,k,n("nav",d,[n("ul",null,[n("li",null,[p(a,{to:"#\u5B9A\u4E49\u6B65\u9AA4"},{default:t(()=>[m]),_:1})]),n("li",null,[p(a,{to:"#\u6307\u9488\u53D8\u91CF\u8BE6\u89E3"},{default:t(()=>[v]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#\u6307\u9488\u521D\u59CB\u5316"},{default:t(()=>[b]),_:1})]),n("li",null,[p(a,{to:"#\u6307\u9488\u53D8\u91CF\u7684\u7C7B\u578B"},{default:t(()=>[h]),_:1})]),n("li",null,[p(a,{to:"#\u6307\u5411\u7C7B\u578B-\u51B3\u5B9A\u4E86\u53D6\u503C\u5BBD\u5EA6"},{default:t(()=>[g]),_:1})]),n("li",null,[p(a,{to:"#\u6307\u5411\u7C7B\u578B-\u51B3\u5B9A\u4E86-1\u8DE8\u5EA6"},{default:t(()=>[y]),_:1})]),n("li",null,[p(a,{to:"#p\u7B49\u4EF7num"},{default:t(()=>[f]),_:1})]),n("li",null,[p(a,{to:"#\u6307\u9488\u53D8\u91CF\u7684\u6CE8\u610F\u9879"},{default:t(()=>[w]),_:1})]),n("li",null,[p(a,{to:"#\u6570\u7EC4\u5143\u7D20\u7684\u6307\u9488\u53D8\u91CF"},{default:t(()=>[_]),_:1})]),n("li",null,[p(a,{to:"#\u6307\u5411\u540C\u4E00\u6570\u7EC4\u5143\u7D20\u7684\u4E24\u4E2A\u6307\u9488\u53D8\u91CF\u95F4\u7684\u5173\u7CFB"},{default:t(()=>[x]),_:1})])])]),n("li",null,[p(a,{to:"#\u6307\u9488\u9AD8\u7EA7"},{default:t(()=>[q]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#\u5B57\u7B26\u4E32\u4E0E\u6307\u9488"},{default:t(()=>[z]),_:1})]),n("li",null,[p(a,{to:"#\u6307\u9488\u6570\u7EC4"},{default:t(()=>[L]),_:1})]),n("li",null,[p(a,{to:"#\u6307\u9488\u7684\u6307\u9488"},{default:t(()=>[N]),_:1})]),n("li",null,[p(a,{to:"#\u6570\u7EC4\u6307\u9488"},{default:t(()=>[U]),_:1})]),n("li",null,[p(a,{to:"#\u4E8C\u7EF4\u6570\u7EC4\u548C\u6570\u7EC4\u6307\u9488\u7684\u5173\u7CFB"},{default:t(()=>[j]),_:1})]),n("li",null,[p(a,{to:"#\u591A\u7EF4\u6570\u7EC4\u7684\u7269\u7406\u5B58\u50A8"},{default:t(()=>[B]),_:1})]),n("li",null,[p(a,{to:"#\u6307\u9488\u53D8\u91CF\u4F5C\u4E3A\u51FD\u6570\u7684\u53C2\u6570"},{default:t(()=>[E]),_:1})]),n("li",null,[p(a,{to:"#\u6570\u7EC4\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570"},{default:t(()=>[C]),_:1})]),n("li",null,[p(a,{to:"#\u4E8C\u7EF4\u6570\u7EC4\u4F5C\u4E3A\u51FD\u6570\u53C2\u6570"},{default:t(()=>[V]),_:1})]),n("li",null,[p(a,{to:"#\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B-\u4E3A\u6307\u9488\u7C7B\u578B"},{default:t(()=>[T]),_:1})]),n("li",null,[p(a,{to:"#\u51FD\u6570\u6307\u9488"},{default:t(()=>[F]),_:1})]),n("li",null,[p(a,{to:"#\u51FD\u6570\u6307\u9488-\u4F5C\u4E3A\u51FD\u6570\u7684\u53C2\u6570"},{default:t(()=>[P]),_:1})])])])])]),R])}var D=e(u,[["render",Y],["__file","page05.html.vue"]]);export{D as default};
