import{_ as p,r as c,o,c as i,b as n,e,w as t,d as s,a as l}from"./app.b33ca31f.js";const u={},d=n("h1",{id:"c-\u5BF9c\u8BED\u8A00\u7684\u52A0\u5F3A",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#c-\u5BF9c\u8BED\u8A00\u7684\u52A0\u5F3A","aria-hidden":"true"},"#"),s(" C++\u5BF9C\u8BED\u8A00\u7684\u52A0\u5F3A")],-1),r=n("hr",null,null,-1),k={class:"table-of-contents"},v=s("namespace\u547D\u540D\u7A7A\u95F4"),m=s("C++\u547D\u540D\u7A7A\u95F4\u7684\u5B9A\u4E49"),b=s("\u4F8B\u5B50"),g=s("\u5B9E\u7528\u6027\u589E\u5F3A"),h=s("\u53D8\u91CF\u68C0\u6D4B\u589E\u5F3A"),y=s("struct \u7C7B\u578B\u589E\u5F3A"),w=s("C++\u4E2D\u6240\u6709\u53D8\u91CF\u548C\u51FD\u6570\u90FD\u5FC5\u987B\u6709\u7C7B\u578B"),f=s("\u65B0\u589Ebool\u7C7B\u578B\u5173\u952E\u5B57"),_=s("\u4E09\u76EE\u8FD0\u7B97\u7B26\u529F\u80FD\u589E\u5F3A"),C=s("const\u589E\u5F3A"),q=s("\u771F\u6B63\u7684\u679A\u4E3E"),x=l(`<h2 id="namespace\u547D\u540D\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#namespace\u547D\u540D\u7A7A\u95F4" aria-hidden="true">#</a> namespace\u547D\u540D\u7A7A\u95F4</h2><p>\u4E09\u79CD\u4F7F\u7528\u65B9\u6CD5\uFF1A</p><ul><li>\u76F4\u63A5\u6307\u5B9A\u6807\u8BC6\u7B26\u3002\u4F8B\u5982<code>std::iostream</code>\u800C\u4E0D\u662F<code>iostream</code></li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>std<span class="token double-colon punctuation">::</span>cout<span class="token operator">&lt;&lt;</span>	std<span class="token double-colon punctuation">::</span>hex<span class="token operator">&lt;&lt;</span><span class="token number">3.4</span><span class="token operator">&lt;&lt;</span>std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\u4F7F\u7528<code>using</code>\u5173\u952E\u5B57</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">using</span> std<span class="token double-colon punctuation">::</span>cout<span class="token punctuation">;</span>	
<span class="token keyword">using</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>	
<span class="token keyword">using</span> std<span class="token double-colon punctuation">::</span>cin<span class="token punctuation">;</span>
cout <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>hex <span class="token operator">&lt;&lt;</span> <span class="token number">3.4</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6700\u65B9\u4FBF\u7684\u5C31\u662F\u4F7F\u7528<code>using namespace std</code>;</li></ul><p>\u4F8B\u5982\uFF1A<code>using namespace std</code>\u8FD9\u6837\u547D\u540D\u7A7A\u95F4<code>std</code>\u5185\u5B9A\u4E49\u7684\u6240\u6709\u6807\u8BC6\u7B26\u90FD\u6709\u6548\uFF08\u66DD\u5149\uFF09\u3002\u547D\u540D\u7A7A\u95F4<code>std</code>\u5C01\u88C5\u7684\u662F\u6807\u51C6\u7A0B\u5E8F\u5E93\u7684\u540D\u79F0\uFF0C\u6807\u51C6\u7A0B\u5E8F\u5E93\u4E3A\u4E86\u548C\u4EE5\u524D\u7684\u5934\u6587\u4EF6\u533A\u522B\uFF0C\u4E00\u822C\u4E0D\u52A0<code>.h</code></p><h3 id="c-\u547D\u540D\u7A7A\u95F4\u7684\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#c-\u547D\u540D\u7A7A\u95F4\u7684\u5B9A\u4E49" aria-hidden="true">#</a> C++\u547D\u540D\u7A7A\u95F4\u7684\u5B9A\u4E49</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">namespace</span> name <span class="token punctuation">{</span>  \u2026  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F7F\u7528\u6574\u4E2A\u547D\u540D\u7A7A\u95F4\uFF1A<code>using namespace name; </code> \u4F7F\u7528\u547D\u540D\u7A7A\u95F4\u4E2D\u7684\u53D8\u91CF\uFF1A<code>using name::variable; </code> \u4F7F\u7528\u9ED8\u8BA4\u547D\u540D\u7A7A\u95F4\u4E2D\u7684\u53D8\u91CF\uFF1A<code>::variable </code> \u9ED8\u8BA4\u60C5\u51B5\u4E0B\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u9ED8\u8BA4\u547D\u540D\u7A7A\u95F4\u4E2D\u7684\u6240\u6709\u6807\u8BC6\u7B26</p><h3 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">namespace</span> NameSpaceA 
<span class="token punctuation">{</span> 
    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token keyword">namespace</span> NameSpaceB
<span class="token punctuation">{</span> 
    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> 
    <span class="token keyword">namespace</span> NameSpaceC 
    <span class="token punctuation">{</span> 
        <span class="token keyword">struct</span> <span class="token class-name">Teacher</span> 
        <span class="token punctuation">{</span> 
            <span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
            <span class="token keyword">int</span> age<span class="token punctuation">;</span> 
        <span class="token punctuation">}</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span> 
<span class="token punctuation">}</span> 
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    <span class="token keyword">using</span> <span class="token keyword">namespace</span> NameSpaceA<span class="token punctuation">;</span>
    <span class="token keyword">using</span> NameSpaceB<span class="token double-colon punctuation">::</span>NameSpaceC<span class="token double-colon punctuation">::</span>Teacher<span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;a = %d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//0</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;a = %d\\n&quot;</span><span class="token punctuation">,</span> NameSpaceB<span class="token double-colon punctuation">::</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1</span>
    NameSpaceB<span class="token double-colon punctuation">::</span>NameSpaceC<span class="token double-colon punctuation">::</span>Teacher t2<span class="token punctuation">;</span> 
    Teacher t1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span> 
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;t1.name = %s\\n&quot;</span><span class="token punctuation">,</span> t1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//aaa</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;t1.age = %d\\n&quot;</span><span class="token punctuation">,</span> t1<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//3</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u7ED3\u8BBA</p><ol><li>\u5F53\u4F7F\u7528<code>&lt;iostream&gt;</code>\u7684\u65F6\u5019\uFF0C\u8BE5\u5934\u6587\u4EF6\u6CA1\u6709\u5B9A\u4E49\u5168\u5C40\u547D\u540D\u7A7A\u95F4\uFF0C\u5FC5\u987B\u4F7F\u7528<code>namespace std</code>\u8FD9\u6837\u624D\u80FD\u6B63\u786E\u4F7F\u7528cout\u3002\u82E5\u4E0D\u5F15\u5165<code>using namespace std</code>,\u9700\u8981\u8FD9\u6837\u505A\u3002<code>std::cout</code>\u3002</li><li>c++\u6807\u51C6\u4E3A\u4E86\u548CC\u533A\u522B\u5F00\uFF0C\u4E5F\u4E3A\u4E86\u6B63\u786E\u4F7F\u7528\u547D\u540D\u7A7A\u95F4\uFF0C\u89C4\u5B9A\u5934\u6587\u4EF6\u4E0D\u4F7F\u7528\u540E\u7F00.h\u3002</li><li>c++\u547D\u540D\u7A7A\u95F4\u7684\u5B9A\u4E49\uFF1A<code>namespace name { \u2026 }</code></li><li><code>using namespace NameSpaceA; </code></li><li><code>namespce</code>\u5B9A\u4E49\u53EF\u5D4C\u5957\u3002</li></ol></div><h2 id="\u5B9E\u7528\u6027\u589E\u5F3A" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u7528\u6027\u589E\u5F3A" aria-hidden="true">#</a> \u5B9E\u7528\u6027\u589E\u5F3A</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span> 
<span class="token comment">//C\u8BED\u2F94\u4E2D\u7684\u53D8\u91CF\u90FD\u5FC5\u987B\u5728\u4F5C\u2F64\u57DF\u5F00\u59CB\u7684\u4F4D\u7F6E\u5B9A\u4E49\uFF01\uFF01</span>
<span class="token comment">//C++\u4E2D\u66F4\u5F3A\u8C03\u8BED\u2F94\u7684\u201C\u5B9E\u2F64\u6027\u201D\uFF0C\u6240\u6709\u7684\u53D8\u91CF\u90FD\u53EF\u4EE5\u5728\u9700\u8981\u4F7F\u2F64\u65F6\u518D\u5B9A\u4E49\u3002</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;i = &quot;</span> <span class="token operator">&lt;&lt;</span>i <span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span> 
    <span class="token keyword">int</span> k<span class="token punctuation">;</span> 
    k <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> 
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;k = &quot;</span> <span class="token operator">&lt;&lt;</span>k <span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span> 
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53D8\u91CF\u68C0\u6D4B\u589E\u5F3A" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u68C0\u6D4B\u589E\u5F3A" aria-hidden="true">#</a> \u53D8\u91CF\u68C0\u6D4B\u589E\u5F3A</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">/*
    \u5728C\u8BED\u2F94\u4E2D\uFF0C\u91CD\u590D\u5B9A\u4E49\u591A\u4E2A\u540C\u540D\u7684\u5168\u5C40\u53D8\u91CF\u662F\u5408\u6CD5\u7684
    \u5728C++\u4E2D\uFF0C\u4E0D\u5141\u8BB8\u5B9A\u4E49\u591A\u4E2A\u540C\u540D\u7684\u5168\u5C40\u53D8\u91CF
    C\u8BED\u2F94\u4E2D\u591A\u4E2A\u540C\u540D\u7684\u5168\u5C40\u53D8\u91CF\u6700\u7EC8\u4F1A\u88AB\u94FE\u63A5\u5230\u5168\u5C40\u6570\u636E\u533A\u7684\u540C\u2F00\u4E2A\u5730\u5740\u7A7A\u95F4\u4E0A
    int g_var;
    int g_var = 1;
    C++\u76F4\u63A5\u62D2\u7EDD\u8FD9\u79CD\u2F06\u4E49\u6027\u7684\u505A\u6CD5\u3002
*/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">int</span> g_var<span class="token punctuation">;</span> 
<span class="token keyword">int</span> g_var <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> 
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;g_var = %d\\n&quot;</span><span class="token punctuation">,</span> g_var<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="struct-\u7C7B\u578B\u589E\u5F3A" tabindex="-1"><a class="header-anchor" href="#struct-\u7C7B\u578B\u589E\u5F3A" aria-hidden="true">#</a> struct \u7C7B\u578B\u589E\u5F3A</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">/*
    C\u8BED\u2F94\u7684struct\u5B9A\u4E49\u4E86\u2F00\u7EC4\u53D8\u91CF\u7684\u96C6\u5408\uFF0CC\u7F16\u8BD1\u5668\u5E76\u4E0D\u8BA4\u4E3A\u8FD9\u662F\u2F00\u79CD\u65B0\u7684\u7C7B\u578B
    C++\u4E2D\u7684struct\u662F\u2F00\u4E2A\u65B0\u7C7B\u578B\u7684\u5B9A\u4E49\u58F0\u660E
*/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">struct</span> <span class="token class-name">Student</span>
<span class="token punctuation">{</span> 
    <span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
    <span class="token keyword">int</span> age<span class="token punctuation">;</span> 
<span class="token punctuation">}</span><span class="token punctuation">;</span> 
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    Student s1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;wang&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span> 
    Student s2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;wang2&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span> 
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="c-\u4E2D\u6240\u6709\u53D8\u91CF\u548C\u51FD\u6570\u90FD\u5FC5\u987B\u6709\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#c-\u4E2D\u6240\u6709\u53D8\u91CF\u548C\u51FD\u6570\u90FD\u5FC5\u987B\u6709\u7C7B\u578B" aria-hidden="true">#</a> C++\u4E2D\u6240\u6709\u53D8\u91CF\u548C\u51FD\u6570\u90FD\u5FC5\u987B\u6709\u7C7B\u578B</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">/*
    C++\u4E2D\u6240\u6709\u7684\u53D8\u91CF\u548C\u51FD\u6570\u90FD\u5FC5\u987B\u6709\u7C7B\u578B
    C\u8BED\u2F94\u4E2D\u7684\u9ED8\u8BA4\u7C7B\u578B\u5728C++\u4E2D\u662F\u4E0D\u5408\u6CD5\u7684
    \u51FD\u6570f\u7684\u8FD4\u56DE\u503C\u662F\u4EC0\u4E48\u7C7B\u578B\uFF0C\u53C2\u6570\u2F1C\u662F\u4EC0\u4E48\u7C7B\u578B\uFF1F
    \u51FD\u6570g\u53EF\u4EE5\u63A5\u53D7\u591A\u5C11\u4E2A\u53C2\u6570\uFF1F
*/</span>
<span class="token comment">//\u66F4\u6362\u6210.cpp\u8BD5\u8BD5</span>
<span class="token function">f</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;i = %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    <span class="token keyword">return</span> <span class="token number">5</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;g() = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u5728C\u8BED\u8A00\u4E2D\uFF1A</p><ul><li>int f( )\uFF1B\u8868\u793A\u8FD4\u56DE\u503C\u4E3Aint\uFF0C\u63A5\u53D7\u4EFB\u610F\u53C2\u6570\u7684\u51FD\u6570</li><li>int f(void)\uFF1B\u8868\u793A\u8FD4\u56DE\u503C\u4E3Aint\u7684\u65E0\u53C2\u51FD\u6570</li></ul><p>\u5728C++\u4E2D\uFF1A</p><ul><li>int f( );\u548Cint f(void)\u5177\u6709\u76F8\u540C\u7684\u610F\u4E49\uFF0C\u90FD\u8868\u793A\u8FD4\u56DE\u503C\u4E3Aint\u7684\u65E0\u53C2\u51FD\u6570</li></ul><p>C++\u66F4\u52A0\u5F3A\u8C03\u7C7B\u578B\uFF0C\u4EFB\u610F\u7684\u7A0B\u5E8F\u5143\u7D20\u90FD\u5FC5\u987B\u663E\u793A\u6307\u660E\u7C7B\u578B</p></div><h2 id="\u65B0\u589Ebool\u7C7B\u578B\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#\u65B0\u589Ebool\u7C7B\u578B\u5173\u952E\u5B57" aria-hidden="true">#</a> \u65B0\u589Ebool\u7C7B\u578B\u5173\u952E\u5B57</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">/*
   C++\u4E2D\u7684\u5E03\u5C14\u7C7B\u578B
   C++\u5728C\u8BED\u2F94\u7684\u57FA\u672C\u7C7B\u578B\u7CFB\u7EDF\u4E4B\u4E0A\u589E\u52A0\u4E86bool
   C++\u4E2D\u7684bool\u53EF\u53D6\u7684\u503C\u53EA\u6709true\u548Cfalse
   \u7406\u8BBA\u4E0Abool\u53EA\u5360\u2F64\u2F00\u4E2A\u5B57\u8282\uFF0C
   \u5982\u679C\u591A\u4E2Abool\u53D8\u91CF\u5B9A\u4E49\u5728\u2F00\u8D77\uFF0C\u53EF\u80FD\u4F1A\u5404\u5360\u2F00\u4E2Abit\uFF0C\u8FD9\u53D6\u51B3\u4E8E\u7F16\u8BD1\u5668\u7684\u5B9E\u73B0
   true\u4EE3\u8868\u771F\u503C\uFF0C\u7F16\u8BD1\u5668\u5185\u90E8\u2F641\u6765\u8868\u2F70
   false\u4EE3\u8868\u2FAE\u771F\u503C\uFF0C\u7F16\u8BD1\u5668\u5185\u90E8\u2F640\u6765\u8868\u2F70
   bool\u7C7B\u578B\u53EA\u6709true\uFF08\u2FAE0\uFF09\u548Cfalse\uFF080\uFF09\u4E24\u4E2A\u503C
   C++\u7F16\u8BD1\u5668\u4F1A\u5728\u8D4B\u503C\u65F6\u5C06\u2FAE0\u503C\u8F6C\u6362\u4E3Atrue\uFF0C0\u503C\u8F6C\u6362\u4E3Afalse
 */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span> 
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    <span class="token keyword">int</span> a<span class="token punctuation">;</span> 
    <span class="token keyword">bool</span> b <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> 
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;b = %d, sizeof(b) = %d\\n&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    b <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> 
    a <span class="token operator">=</span> b<span class="token punctuation">;</span> 
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;a = %d, b = %d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    b <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">;</span> 
    a <span class="token operator">=</span> b<span class="token punctuation">;</span> 
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;a = %d, b = %d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> 
    b <span class="token operator">=</span> a<span class="token punctuation">;</span> 
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;a = %d, b = %d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;b = %d\\n&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E09\u76EE\u8FD0\u7B97\u7B26\u529F\u80FD\u589E\u5F3A" tabindex="-1"><a class="header-anchor" href="#\u4E09\u76EE\u8FD0\u7B97\u7B26\u529F\u80FD\u589E\u5F3A" aria-hidden="true">#</a> \u4E09\u76EE\u8FD0\u7B97\u7B26\u529F\u80FD\u589E\u5F3A</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span> 
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> 
    <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> 
    <span class="token comment">//\u8FD4\u56DE\u2F00\u4E2A\u6700\u2F29\u6570 \u5E76\u4E14\u7ED9\u6700\u2F29\u6570\u8D4B\u503C\u621030</span>
    <span class="token comment">//\u4E09\u76EE\u8FD0\u7B97\u7B26\u662F\u2F00\u4E2A\u8868\u8FBE\u5F0F \uFF0C\u8868\u8FBE\u5F0F\u4E0D\u53EF\u80FD\u505A\u5DE6\u503C</span>
    <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> b <span class="token operator">?</span> a <span class="token operator">:</span> b <span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span> 
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;a = %d, b = %d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><ul><li><p>C\u8BED\u8A00\u8FD4\u56DE\u53D8\u91CF\u7684\u503C C++\u8BED\u8A00\u662F\u8FD4\u56DE\u53D8\u91CF\u672C\u8EAB</p></li><li><p>C\u8BED\u8A00\u4E2D\u7684\u4E09\u76EE\u8FD0\u7B97\u7B26\u8FD4\u56DE\u7684\u662F\u53D8\u91CF\u503C\uFF0C\u4E0D\u80FD\u4F5C\u4E3A\u5DE6\u503C\u4F7F\u7528</p></li><li><p>C++\u4E2D\u7684\u4E09\u76EE\u8FD0\u7B97\u7B26\u53EF\u76F4\u63A5\u8FD4\u56DE\u53D8\u91CF\u672C\u8EAB\uFF0C\u56E0\u6B64\u53EF\u4EE5\u51FA\u73B0\u5728\u7A0B\u5E8F\u7684\u4EFB\u4F55\u5730 \u65B9</p></li><li><p>\u4E09\u76EE\u8FD0\u7B97\u7B26\u53EF\u80FD\u8FD4\u56DE\u7684\u503C\u4E2D\u5982\u679C\u6709\u4E00\u4E2A\u662F\u5E38\u91CF\u503C\uFF0C\u5219\u4E0D\u80FD\u4F5C\u4E3A\u5DE6\u503C \u4F7F\u7528</p></li><li><p>(a &lt; b ? 1 : b )= 30 //err</p></li></ul><p>3\uFF09C\u8BED\u8A00\u5982\u4F55\u652F\u6301\u7C7B\u4F3CC++\u7684\u7279\u6027\u5462\uFF1F</p><ul><li>\u5F53\u5DE6\u503C\u7684\u6761\u4EF6\uFF1A\u8981\u6709\u5185\u5B58\u7A7A\u95F4\uFF1BC++\u7F16\u8BD1\u5668\u5E2E\u52A9\u7A0B\u5E8F\u5458\u53D6\u4E86\u4E00\u4E2A\u5730\u5740\u800C\u5DF2</li></ul></div><h2 id="const\u589E\u5F3A" tabindex="-1"><a class="header-anchor" href="#const\u589E\u5F3A" aria-hidden="true">#</a> const\u589E\u5F3A</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    <span class="token comment">//const \u5B9A\u4E49\u5E38\u91CF---&gt; const \u610F\u5473\u53EA\u8BFB</span>
    <span class="token keyword">const</span> <span class="token keyword">int</span> a<span class="token punctuation">;</span> 
    <span class="token keyword">int</span> <span class="token keyword">const</span> b<span class="token punctuation">;</span> 
    <span class="token comment">//\u7B2C\u2F00\u4E2A\u7B2C\u2F06\u4E2A\u610F\u601D\u2F00\u6837 \u4EE3\u8868\u2F00\u4E2A\u5E38\u6574\u5F62\u6570</span>
    <span class="token keyword">const</span> <span class="token keyword">int</span> <span class="token operator">*</span>c<span class="token punctuation">;</span> 
    <span class="token comment">//\u7B2C\u4E09\u4E2A c\u662F\u2F00\u4E2A\u6307\u5411\u5E38\u6574\u5F62\u6570\u7684\u6307\u9488(\u6240\u6307\u5411\u7684\u5185\u5B58\u6570\u636E\u4E0D\u80FD\u88AB\u4FEE\u6539\uFF0C\u4F46\u662F\u672C\u2F9D\u53EF\u4EE5\u4FEE\u6539)</span>
    <span class="token keyword">int</span> <span class="token operator">*</span> <span class="token keyword">const</span> d<span class="token punctuation">;</span> 
    <span class="token comment">//\u7B2C\u56DB\u4E2A d \u5E38\u6307\u9488\uFF08\u6307\u9488\u53D8\u91CF\u4E0D\u80FD\u88AB\u4FEE\u6539\uFF0C\u4F46\u662F\u5B83\u6240\u6307\u5411\u5185\u5B58\u7A7A\u95F4\u53EF\u4EE5\u88AB\u4FEE\u6539\uFF09</span>
    <span class="token keyword">const</span> <span class="token keyword">int</span> <span class="token operator">*</span> <span class="token keyword">const</span> e <span class="token punctuation">;</span> 
    <span class="token comment">//\u7B2C\u4E94\u4E2A e\u2F00\u4E2A\u6307\u5411\u5E38\u6574\u5F62\u7684\u5E38\u6307\u9488\uFF08\u6307\u9488\u548C\u5B83\u6240\u6307\u5411\u7684\u5185\u5B58\u7A7A\u95F4\uFF0C\u5747\u4E0D\u80FD\u88AB\u4FEE\u6539\uFF09</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5408\u7406\u7684\u5229\u7528<code>const</code>\u7684\u597D\u5904\uFF1A</p><ol><li>\u6307\u9488\u505A\u51FD\u6570\u53C2\u6570\uFF0C\u53EF\u4EE5\u6709\u6548\u7684\u63D0\u9AD8\u4EE3\u7801\u53EF\u8BFB\u6027\uFF0C\u51CF\u5C11bug\uFF1B</li><li>\u6E05\u695A\u7684\u5206\u6E05\u53C2\u6570\u7684\u8F93\u5165\u548C\u8F93\u51FA\u7279\u6027</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//c\u8BED\u8A00\u4E2Dconst\u53EF\u4EE5\u88AB\u6307\u9488\uFF08\u6307\u9488\u6743\u9650\u9AD8\uFF09\u4FEE\u6539</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    <span class="token keyword">const</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> 
    <span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>a<span class="token punctuation">;</span> 
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;a===&gt;%d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>         
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;a===&gt;%d\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>                    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>c++\u4E2D <code>const</code>\u548C <code>#define</code> \u7684\u4F5C\u7528\u76F8\u540C\uFF08\u901A\u8FC7\u7B26\u53F7\u8868\u7EF4\u62A4\uFF09</p><p>\u533A\u522B\uFF1A</p><ul><li><code>const</code>\u5E38\u91CF\u662F\u7531\u7F16\u8BD1\u5668\u5904\u7406\u7684\uFF0C\u63D0\u4F9B\u7C7B\u578B\u68C0\u67E5\u548C\u4F5C\u7528\u57DF\u68C0\u67E5</li><li>\u5B8F\u5B9A\u4E49\u7531\u9884\u5904\u7406\u5668\u5904\u7406\uFF0C\u5355\u7EAF\u7684\u6587\u672C\u66FF\u6362</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">//C++\u4E2D\u7684const\u4FEE\u9970\u7684\uFF0C\u662F\u4E00\u4E2A\u771F\u6B63\u7684\u5E38\u91CF\uFF0C\u800C\u4E0D\u662FC\u4E2D\u53D8\u91CF\uFF08\u53EA\u8BFB\uFF09\u3002\u5728const\u4FEE\u9970\u7684\u5E38\u91CF\u7F16\u8BD1\u671F\u95F4\uFF0C\u5C31\u5DF2\u7ECF\u786E\u5B9A\u4E0B\u6765\u4E86</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span>  </span>
<span class="token comment">//#define N 10 </span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    <span class="token keyword">const</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>   
    <span class="token keyword">const</span> <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>   
    <span class="token keyword">int</span> array<span class="token punctuation">[</span>a <span class="token operator">+</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span> 
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>       
                         
    <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> 
    <span class="token punctuation">{</span>                            
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;array[%d] = %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>                                            
                                 
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>                    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u603B\u7ED3</p><p>C\u8BED\u8A00\u4E2D\u7684const\u53D8\u91CF</p><ul><li>C\u8BED\u8A00\u4E2Dconst\u53D8\u91CF\u662F\u53EA\u8BFB\u53D8\u91CF\uFF0C\u6709\u81EA\u5DF1\u7684\u5B58\u50A8\u7A7A\u95F4</li></ul><p>C++\u4E2D\u7684const\u5E38\u91CF</p><ul><li>\u53EF\u80FD\u5206\u914D\u5B58\u50A8\u7A7A\u95F4,\u4E5F\u53EF\u80FD\u4E0D\u5206\u914D\u5B58\u50A8\u7A7A\u95F4</li><li>\u5F53const\u5E38\u91CF\u4E3A\u5168\u5C40\uFF0C\u5E76\u4E14\u9700\u8981\u5728\u5176\u5B83\u6587\u4EF6\u4E2D\u4F7F\u7528\uFF0C\u4F1A\u5206\u914D\u5B58\u50A8\u7A7A\u95F4</li><li>\u5F53\u4F7F\u7528&amp;\u64CD\u4F5C\u7B26\uFF0C\u53D6const\u5E38\u91CF\u7684\u5730\u5740\u65F6\uFF0C\u4F1A\u5206\u914D\u5B58\u50A8\u7A7A\u95F4</li><li>\u5F53const int &amp;a = 10; const\u4FEE\u9970\u5F15\u7528\u65F6\uFF0C\u4E5F\u4F1A\u5206\u914D\u5B58\u50A8\u7A7A\u95F4</li></ul></div><h2 id="\u771F\u6B63\u7684\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#\u771F\u6B63\u7684\u679A\u4E3E" aria-hidden="true">#</a> \u771F\u6B63\u7684\u679A\u4E3E</h2><p>c \u8BED\u8A00\u4E2D\u679A\u4E3E\u672C\u8D28\u5C31\u662F\u6574\u578B,\u679A\u4E3E\u53D8\u91CF\u53EF\u4EE5\u7528\u4EFB\u610F\u6574\u578B\u8D4B\u503C\u3002\u800C c++\u4E2D\u679A\u4E3E\u53D8\u91CF, \u53EA\u80FD\u7528\u88AB\u679A\u4E3E\u51FA\u6765\u7684\u5143\u7D20\u521D\u59CB\u5316\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span> 
<span class="token keyword">enum</span> <span class="token class-name">season</span> <span class="token punctuation">{</span>SPR<span class="token punctuation">,</span>SUM<span class="token punctuation">,</span>AUT<span class="token punctuation">,</span>WIN<span class="token punctuation">}</span><span class="token punctuation">;</span> 
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span> 
    <span class="token keyword">enum</span> <span class="token class-name">season</span> s <span class="token operator">=</span> SPR<span class="token punctuation">;</span> 
    <span class="token comment">//s = 0;    // error, \u4F46\u662FC\u8BED\u2F94\u53EF\u4EE5\u901A\u8FC7</span>
    s <span class="token operator">=</span> SUM<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;s = &quot;</span> <span class="token operator">&lt;&lt;</span> s <span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>   <span class="token comment">//1</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,41);function S(N,B){const a=c("RouterLink");return o(),i("div",null,[d,r,n("nav",k,[n("ul",null,[n("li",null,[e(a,{to:"#namespace\u547D\u540D\u7A7A\u95F4"},{default:t(()=>[v]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#c-\u547D\u540D\u7A7A\u95F4\u7684\u5B9A\u4E49"},{default:t(()=>[m]),_:1})]),n("li",null,[e(a,{to:"#\u4F8B\u5B50"},{default:t(()=>[b]),_:1})])])]),n("li",null,[e(a,{to:"#\u5B9E\u7528\u6027\u589E\u5F3A"},{default:t(()=>[g]),_:1})]),n("li",null,[e(a,{to:"#\u53D8\u91CF\u68C0\u6D4B\u589E\u5F3A"},{default:t(()=>[h]),_:1})]),n("li",null,[e(a,{to:"#struct-\u7C7B\u578B\u589E\u5F3A"},{default:t(()=>[y]),_:1})]),n("li",null,[e(a,{to:"#c-\u4E2D\u6240\u6709\u53D8\u91CF\u548C\u51FD\u6570\u90FD\u5FC5\u987B\u6709\u7C7B\u578B"},{default:t(()=>[w]),_:1})]),n("li",null,[e(a,{to:"#\u65B0\u589Ebool\u7C7B\u578B\u5173\u952E\u5B57"},{default:t(()=>[f]),_:1})]),n("li",null,[e(a,{to:"#\u4E09\u76EE\u8FD0\u7B97\u7B26\u529F\u80FD\u589E\u5F3A"},{default:t(()=>[_]),_:1})]),n("li",null,[e(a,{to:"#const\u589E\u5F3A"},{default:t(()=>[C]),_:1})]),n("li",null,[e(a,{to:"#\u771F\u6B63\u7684\u679A\u4E3E"},{default:t(()=>[q]),_:1})])])]),x])}var A=p(u,[["render",S],["__file","page21.html.vue"]]);export{A as default};
